var P=Object.defineProperty;var C=(r,e,s)=>e in r?P(r,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):r[e]=s;var d=(r,e,s)=>C(r,typeof e!="symbol"?e+"":e,s);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))t(a);new MutationObserver(a=>{for(const i of a)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&t(o)}).observe(document,{childList:!0,subtree:!0});function s(a){const i={};return a.integrity&&(i.integrity=a.integrity),a.referrerPolicy&&(i.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?i.credentials="include":a.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function t(a){if(a.ep)return;a.ep=!0;const i=s(a);fetch(a.href,i)}})();const k={wireStock:{id:"wireStock",name:"Wire Stock",amount:0,description:"Basic metal wire for springs and electrical components"},sheetMetal:{id:"sheetMetal",name:"Sheet Metal",amount:0,description:"Thin metal sheets for brackets and body panels"},leatherScraps:{id:"leatherScraps",name:"Leather Scraps",amount:0,description:"Leather pieces for gaskets and upholstery"},oil:{id:"oil",name:"Oil",amount:0,description:"For lubrication and rubber processing"},wood:{id:"wood",name:"Wood",amount:0,description:"Structural material for frames and interior components"},rubber:{id:"rubber",name:"Rubber",amount:0,description:"Processed material for tires and sealing"},glass:{id:"glass",name:"Glass",amount:0,description:"Transparent material for lights and gauges"},lead:{id:"lead",name:"Lead",amount:0,description:"Heavy metal for batteries and electrical components"},fabric:{id:"fabric",name:"Fabric",amount:0,description:"Textile for upholstery and insulation"},coal:{id:"coal",name:"Coal",amount:0,description:"Fuel for heat treatment and processing"},wireSprings:{id:"wireSprings",name:"Wire Springs",amount:0,description:"Hand-bent springs for automotive use"},electricalWire:{id:"electricalWire",name:"Electrical Wire",amount:0,description:"Insulated wire for electrical systems"},metalBrackets:{id:"metalBrackets",name:"Metal Brackets",amount:0,description:"Filed and shaped mounting brackets"},metalRods:{id:"metalRods",name:"Metal Rods",amount:0,description:"Shaped structural components"},metalPlates:{id:"metalPlates",name:"Metal Plates",amount:0,description:"Heavy-duty metal plates for structural use"},leatherGaskets:{id:"leatherGaskets",name:"Leather Gaskets",amount:0,description:"Cut gaskets for sealing"},rubberTubing:{id:"rubberTubing",name:"Rubber Tubing",amount:0,description:"Flexible tubing for fuel and electrical lines"},glassLenses:{id:"glassLenses",name:"Glass Lenses",amount:0,description:"Shaped glass for lights and gauges"},fabricStrips:{id:"fabricStrips",name:"Fabric Strips",amount:0,description:"Cut fabric for various applications"},woodPlanks:{id:"woodPlanks",name:"Wood Planks",amount:0,description:"Processed wood for construction"},woodFrames:{id:"woodFrames",name:"Wood Frames",amount:0,description:"Reinforced wooden frame structures"},pistons:{id:"pistons",name:"Pistons",amount:0,description:"Engine internal components for power generation"},crankshaft:{id:"crankshaft",name:"Crankshaft",amount:0,description:"Engine power transmission component"},valves:{id:"valves",name:"Valves",amount:0,description:"Flow control mechanisms for engine"},sparkPlugs:{id:"sparkPlugs",name:"Spark Plugs",amount:0,description:"Electrical ignition components"},gears:{id:"gears",name:"Gears",amount:0,description:"Precision-machined transmission components"},bearings:{id:"bearings",name:"Bearings",amount:0,description:"Smooth-running mechanical supports"},clutchPlates:{id:"clutchPlates",name:"Clutch Plates",amount:0,description:"Power engagement mechanisms"},leafSprings:{id:"leafSprings",name:"Leaf Springs",amount:0,description:"Heavy-duty suspension components"},axles:{id:"axles",name:"Axles",amount:0,description:"Wheel mounting and power transmission shafts"},brakeShoes:{id:"brakeShoes",name:"Brake Shoes",amount:0,description:"Stopping mechanism components"},bodyPanels:{id:"bodyPanels",name:"Body Panels",amount:0,description:"Formed metal panels for vehicle exterior"},seats:{id:"seats",name:"Seats",amount:0,description:"Upholstered seating for vehicle interior"},dashboard:{id:"dashboard",name:"Dashboard",amount:0,description:"Instrument panel for vehicle controls"},batteries:{id:"batteries",name:"Batteries",amount:0,description:"Electrical power storage units"},headlights:{id:"headlights",name:"Headlights",amount:0,description:"Vehicle lighting systems"},wiringHarness:{id:"wiringHarness",name:"Wiring Harness",amount:0,description:"Complete electrical wiring system"},engineAssembly:{id:"engineAssembly",name:"Engine Assembly",amount:0,description:"Complete engine power unit"},transmissionAssembly:{id:"transmissionAssembly",name:"Transmission Assembly",amount:0,description:"Complete power transfer system"},chassisAssembly:{id:"chassisAssembly",name:"Chassis Assembly",amount:0,description:"Complete vehicle foundation structure"},bodyAssembly:{id:"bodyAssembly",name:"Body Assembly",amount:0,description:"Complete vehicle shell and interior"},wheelAssembly:{id:"wheelAssembly",name:"Wheel Assembly",amount:0,description:"Complete wheel units"},electricalSystem:{id:"electricalSystem",name:"Electrical System",amount:0,description:"Complete electrical and lighting system"},fuelSystem:{id:"fuelSystem",name:"Fuel System",amount:0,description:"Complete fuel storage and delivery system"},automobile:{id:"automobile",name:"Automobile",amount:0,description:"Complete early 1900s motor vehicle"},marks:{id:"marks",name:"Marks",amount:0,description:"Currency for trading"}},w=[{id:"firstWireSpring",name:"First Wire Spring",description:"Bend your first wire spring",condition:r=>r.resources.wireSprings.amount>=1,reward:(r,e)=>{r.unlockedRecipes.add("shapeMetalRod"),e==null||e.addNotification("Wire working unlocked metal shaping!","success",3e3)}},{id:"firstMetalBracket",name:"First Metal Bracket",description:"File your first metal bracket",condition:r=>r.resources.metalBrackets.amount>=1,reward:(r,e)=>{r.unlockedRecipes.add("forgeMetalPlate"),e==null||e.addNotification("Metal filing unlocked plate forging!","success",3e3)}},{id:"firstLeatherGasket",name:"First Leather Gasket",description:"Cut your first leather gasket",condition:r=>r.resources.leatherGaskets.amount>=1,reward:(r,e)=>{r.unlockedRecipes.add("cutFabricStrips"),r.uiState.discoveredResources.add("fabric"),e==null||e.addNotification("Leather work unlocked fabric processing!","success",3e3)}},{id:"basicMetalworking",name:"Basic Metalworking",description:"Master basic metal shaping",condition:r=>(r.totalProduced.metalRods||0)>=3&&(r.totalProduced.metalPlates||0)>=2,reward:(r,e)=>{r.unlockedRecipes.add("cutWoodPlanks"),r.unlockedRecipes.add("buildWoodFrame"),r.uiState.discoveredResources.add("wood"),e==null||e.addNotification("Metalworking mastery unlocked woodworking!","success",3e3)}},{id:"electricalIntroduction",name:"Electrical Introduction",description:"Produce 5 wire springs to understand electrical potential",condition:r=>(r.totalProduced.wireSprings||0)>=5,reward:(r,e)=>{r.unlockedRecipes.add("makeElectricalWire"),r.uiState.discoveredResources.add("rubber"),e==null||e.addNotification("Wire expertise unlocked electrical components!","success",3e3)}},{id:"rubberProcessing",name:"Rubber Processing",description:"Create electrical wire to unlock rubber processing",condition:r=>(r.totalProduced.electricalWire||0)>=1,reward:(r,e)=>{r.unlockedRecipes.add("formRubberTubing"),r.unlockedRecipes.add("shapeGlassLens"),r.uiState.discoveredResources.add("glass"),e==null||e.addNotification("Electrical work unlocked advanced materials!","success",3e3)}},{id:"basicComponentMastery",name:"Basic Component Mastery",description:"Demonstrate mastery of basic component production",condition:r=>["wireSprings","metalBrackets","leatherGaskets","metalRods","metalPlates"].filter(t=>(r.totalProduced[t]||0)>=5).length>=4,reward:(r,e)=>{r.uiState.discoveredResources.add("coal"),r.uiState.showAdvancedCrafting=!0,r.unlockedRecipes.add("craftBearing"),r.unlockedRecipes.add("assembleValve"),e==null||e.addNotification("🔧 Advanced Crafting Unlocked!","success",4e3)}},{id:"engineComponentBasics",name:"Engine Component Basics",description:"Create first engine components",condition:r=>(r.totalProduced.bearings||0)>=2&&(r.totalProduced.valves||0)>=2,reward:(r,e)=>{r.unlockedRecipes.add("machinePiston"),r.unlockedRecipes.add("craftSparkPlug"),e==null||e.addNotification("Engine basics unlocked piston technology!","success",3e3)}},{id:"powerSystemDevelopment",name:"Power System Development",description:"Develop core engine power components",condition:r=>(r.totalProduced.pistons||0)>=3&&(r.totalProduced.sparkPlugs||0)>=3,reward:(r,e)=>{r.unlockedRecipes.add("machineGear"),r.unlockedRecipes.add("assembleClutchPlate"),e==null||e.addNotification("Power systems unlocked transmission technology!","success",3e3)}},{id:"transmissionMastery",name:"Transmission Mastery",description:"Master transmission component production",condition:r=>(r.totalProduced.gears||0)>=4&&(r.totalProduced.clutchPlates||0)>=2,reward:(r,e)=>{r.unlockedRecipes.add("buildLeafSpring"),r.unlockedRecipes.add("forgeAxle"),r.unlockedRecipes.add("craftBrakeShoe"),e==null||e.addNotification("Transmission mastery unlocked chassis systems!","success",3e3)}},{id:"chassisDevelopment",name:"Chassis Development",description:"Develop vehicle chassis components",condition:r=>(r.totalProduced.leafSprings||0)>=2&&(r.totalProduced.axles||0)>=2,reward:(r,e)=>{r.unlockedRecipes.add("formBodyPanel"),r.unlockedRecipes.add("upholsterSeat"),r.unlockedRecipes.add("buildDashboard"),e==null||e.addNotification("Chassis development unlocked body construction!","success",3e3)}},{id:"bodyConstruction",name:"Body Construction",description:"Master vehicle body construction",condition:r=>(r.totalProduced.bodyPanels||0)>=3&&(r.totalProduced.seats||0)>=1,reward:(r,e)=>{r.unlockedRecipes.add("assembleBattery"),r.unlockedRecipes.add("buildHeadlight"),r.unlockedRecipes.add("assembleWiringHarness"),r.uiState.discoveredResources.add("lead"),e==null||e.addNotification("Body construction unlocked electrical systems!","success",3e3)}},{id:"electricalSystemMastery",name:"Electrical System Mastery",description:"Master electrical component production",condition:r=>(r.totalProduced.batteries||0)>=1&&(r.totalProduced.headlights||0)>=2,reward:(r,e)=>{r.unlockedRecipes.add("assembleWheel"),r.unlockedRecipes.add("assembleFuelSystem"),r.uiState.showAssemblySystems=!0,e==null||e.addNotification("🏭 Assembly Systems Unlocked!","success",4e3)}},{id:"firstAssemblyCompletion",name:"First Assembly Completion",description:"Complete your first major assembly",condition:r=>(r.totalProduced.wheelAssembly||0)>=1||(r.totalProduced.fuelSystem||0)>=1,reward:(r,e)=>{r.unlockedRecipes.add("assembleEngine"),r.unlockedRecipes.add("assembleTransmission"),e==null||e.addNotification("First assembly unlocked major systems!","success",3e3)}},{id:"majorSystemsProduction",name:"Major Systems Production",description:"Produce major vehicle systems",condition:r=>(r.totalProduced.engineAssembly||0)>=1&&(r.totalProduced.transmissionAssembly||0)>=1,reward:(r,e)=>{r.unlockedRecipes.add("assembleChassis"),r.unlockedRecipes.add("assembleBody"),r.unlockedRecipes.add("assembleElectricalSystem"),e==null||e.addNotification("Major systems unlocked final assemblies!","success",3e3)}},{id:"assemblyMastery",name:"Assembly Mastery",description:"Master assembly system production",condition:r=>["wheelAssembly","fuelSystem","engineAssembly","transmissionAssembly","chassisAssembly","bodyAssembly","electricalSystem"].filter(t=>(r.totalProduced[t]||0)>=1).length>=5,reward:(r,e)=>{r.unlockedRecipes.add("constructAutomobile"),r.uiState.showAutomobileConstruction=!0,e==null||e.addNotification("🚗 Automobile Construction Unlocked!","success",4e3)}},{id:"firstAutomobile",name:"First Automobile",description:"Construct your first complete automobile",condition:r=>(r.totalProduced.automobile||0)>=1,reward:(r,e)=>{r.unlockedMachines.add("advancedWireBendingJig"),r.unlockedMachines.add("advancedFilingStation"),r.unlockedMachines.add("assemblyLine"),r.resources.marks.amount+=500,e==null||e.addNotification("🎉 First Automobile Complete! Advanced automation unlocked!","success",5e3)}},{id:"automobileProduction",name:"Automobile Production",description:"Establish automobile production line",condition:r=>(r.totalProduced.automobile||0)>=3,reward:(r,e)=>{r.unlockedStockControl.add("logisticsCoordinator"),r.resources.marks.amount+=1e3,e==null||e.addNotification("Production line established! Logistics unlocked!","success",4e3)}},{id:"springProductionLine",name:"Spring Production Line",description:"Establish consistent spring production",condition:r=>(r.totalProduced.wireSprings||0)>=10,reward:(r,e)=>{r.unlockedMachines.add("wireBendingJig"),e==null||e.addNotification("Wire Bending Jig unlocked!","success",3e3)}},{id:"bracketProductionLine",name:"Bracket Production Line",description:"Establish consistent bracket production",condition:r=>(r.totalProduced.metalBrackets||0)>=10,reward:(r,e)=>{r.unlockedMachines.add("filingStation"),e==null||e.addNotification("Filing Station unlocked!","success",3e3)}},{id:"pistonManufacturing",name:"Piston Manufacturing",description:"Scale up piston production",condition:r=>(r.totalProduced.pistons||0)>=15,reward:(r,e)=>{r.unlockedMachines.add("pistonPress"),e==null||e.addNotification("Piston Press unlocked!","success",3e3)}},{id:"gearManufacturing",name:"Gear Manufacturing",description:"Scale up gear production",condition:r=>(r.totalProduced.gears||0)>=12,reward:(r,e)=>{r.unlockedMachines.add("gearCuttingMachine"),e==null||e.addNotification("Gear Cutting Machine unlocked!","success",3e3)}},{id:"engineAssemblyAutomation",name:"Engine Assembly Automation",description:"Automate engine assembly process",condition:r=>(r.totalProduced.engineAssembly||0)>=3,reward:(r,e)=>{r.unlockedMachines.add("engineAssemblyRig"),e==null||e.addNotification("Engine Assembly Rig unlocked!","success",3e3)}},{id:"chassisAssemblyAutomation",name:"Chassis Assembly Automation",description:"Automate chassis assembly process",condition:r=>(r.totalProduced.chassisAssembly||0)>=3,reward:(r,e)=>{r.unlockedMachines.add("chassisAssemblyRig"),e==null||e.addNotification("Chassis Assembly Rig unlocked!","success",3e3)}},{id:"firstSale",name:"First Sale",description:"Sell your first item",condition:r=>r.totalSales>0,reward:(r,e)=>{e==null||e.addNotification("Welcome to commerce!","success",2e3)}},{id:"marketExperience",name:"Market Experience",description:"Complete multiple market transactions",condition:r=>r.totalMarketTransactions>=10,reward:(r,e)=>{r.unlockedStockControl.add("procurementSpecialist"),r.unlockedStockControl.add("salesManager"),r.uiState.showStockControl=!0,e==null||e.addNotification("📊 Stock Control Unlocked!","success",4e3)}},{id:"stockControlMastery",name:"Stock Control Mastery",description:"Master automated trading systems",condition:r=>!!(r.stockControl.personnel.procurementSpecialist&&r.stockControl.personnel.salesManager),reward:(r,e)=>{r.unlockedStockControl.add("supplyChainCoordinator"),e==null||e.addNotification("Supply Chain Coordinator unlocked!","success",3e3)}}];class A{constructor(){d(this,"listeners",new Map)}on(e,s){this.listeners.has(e)||this.listeners.set(e,[]),this.listeners.get(e).push(s)}off(e,s){const t=this.listeners.get(e);if(t){const a=t.indexOf(s);a>-1&&t.splice(a,1)}}emit(e,s){const t=this.listeners.get(e);t&&t.forEach(a=>a(s))}removeAllListeners(){this.listeners.clear()}}class I{constructor(){d(this,"notifications",new Map);d(this,"container",null);d(this,"nextId",1);this.createContainer()}createContainer(){const e=document.querySelector(".notifications-container");e&&e.remove(),this.container=document.createElement("div"),this.container.className="notifications-container",document.body.appendChild(this.container)}addNotification(e,s="info",t=5e3){const a=`notification_${this.nextId++}_${Date.now()}`,i={id:a,message:e,type:s,timestamp:Date.now(),duration:t,isVisible:!1,isRemoving:!1};return this.notifications.set(a,i),this.renderNotification(i),requestAnimationFrame(()=>{this.showNotification(a)}),a}removeNotification(e){const s=this.notifications.get(e);!s||s.isRemoving||(s.isRemoving=!0,this.hideNotification(e))}renderNotification(e){if(!this.container)return;const s=document.createElement("div");s.className=`notification notification-${e.type}`,s.setAttribute("data-notification-id",e.id),s.style.transform="translateX(100%)",s.style.opacity="0",s.innerHTML=`
      <div class="notification-content">
        <span class="notification-message">${e.message}</span>
        <button class="notification-close" data-close-notification="${e.id}">×</button>
      </div>
      <div class="notification-progress" data-notification-progress="${e.id}"></div>
    `;const t=s.querySelector("[data-close-notification]");t==null||t.addEventListener("click",()=>{this.removeNotification(e.id)}),this.container.appendChild(s)}showNotification(e){var i;const s=this.notifications.get(e);if(!s||s.isRemoving)return;const t=(i=this.container)==null?void 0:i.querySelector(`[data-notification-id="${e}"]`);if(!t)return;s.isVisible=!0,t.style.transition="transform 0.3s ease, opacity 0.3s ease",t.style.transform="translateX(0)",t.style.opacity="1";const a=t.querySelector("[data-notification-progress]");a&&setTimeout(()=>{s.isRemoving||(a.style.transition=`width ${s.duration}ms linear`,a.style.width="0%")},100),setTimeout(()=>{s.isRemoving||this.removeNotification(e)},s.duration)}hideNotification(e){var a;if(!this.notifications.get(e))return;const t=(a=this.container)==null?void 0:a.querySelector(`[data-notification-id="${e}"]`);if(!t){this.notifications.delete(e);return}t.style.transition="transform 0.3s ease, opacity 0.3s ease, max-height 0.3s ease, margin 0.3s ease, padding 0.3s ease",t.style.transform="translateX(100%)",t.style.opacity="0",t.style.maxHeight="0",t.style.marginBottom="0",t.style.paddingTop="0",t.style.paddingBottom="0",setTimeout(()=>{t.parentNode&&t.parentNode.removeChild(t),this.notifications.delete(e)},300)}getActiveNotifications(){return Array.from(this.notifications.values())}clearAll(){Array.from(this.notifications.keys()).forEach(s=>this.removeNotification(s))}destroy(){this.clearAll(),this.container&&this.container.parentNode&&this.container.parentNode.removeChild(this.container),this.container=null}}class E{constructor(){d(this,"state");d(this,"saveKey","autobahn-save");d(this,"eventEmitter");d(this,"notificationManager");this.eventEmitter=new A,this.notificationManager=new I,this.state=this.loadGame()||this.createNewGame()}getEventEmitter(){return this.eventEmitter}createNewGame(){return{resources:{...k},machines:{},stockControl:{personnel:{},rules:{},lastSalaryPayment:Date.now()},unlockedRecipes:new Set(["bendWireSpring","fileMetalBracket","cutLeatherGasket"]),unlockedMachines:new Set,unlockedStockControl:new Set,completedMilestones:new Set,totalClicks:0,totalProduced:{},totalSales:0,totalMarketTransactions:0,gameStartTime:Date.now(),lastSaveTime:Date.now(),uiState:{discoveredResources:new Set(["marks","wireStock","sheetMetal","leatherScraps","oil"]),showMarket:!0,showStockControl:!1,showAdvancedCrafting:!1,showAssemblySystems:!1,showAutomobileConstruction:!1,panelStates:{}}}}getState(){return this.state}setMarketVisibility(e){this.state.uiState.showMarket!==e&&(this.state.uiState.showMarket=e,this.eventEmitter.emit("marketVisibilityChanged",{visible:e}),this.eventEmitter.emit("gameStateUpdated",{timestamp:Date.now()}))}setStockControlVisibility(e){this.state.uiState.showStockControl!==e&&(this.state.uiState.showStockControl=e,this.eventEmitter.emit("stockControlVisibilityChanged",{visible:e}),this.eventEmitter.emit("gameStateUpdated",{timestamp:Date.now()}))}addNotification(e,s="info",t=5e3){return this.notificationManager.addNotification(e,s,t)}removeNotification(e){this.notificationManager.removeNotification(e)}getNotificationManager(){return this.notificationManager}setPanelState(e,s){this.state.uiState.panelStates[e]||(this.state.uiState.panelStates[e]={expanded:!0}),Object.assign(this.state.uiState.panelStates[e],s)}updateResource(e,s){if(this.state.resources[e]){const t=this.state.resources[e].amount;this.state.resources[e].amount=Math.max(0,this.state.resources[e].amount+s);const a=this.state.resources[e].amount;s>0&&(this.state.totalProduced[e]=(this.state.totalProduced[e]||0)+s);const i=this.state.uiState.discoveredResources.has(e);(this.state.resources[e].amount>0||t>0&&this.state.resources[e].amount===0)&&(i||(this.state.uiState.discoveredResources.add(e),this.eventEmitter.emit("resourceDiscovered",{resourceId:e}))),this.eventEmitter.emit("resourceAmountChanged",{resourceId:e,oldAmount:t,newAmount:a}),this.eventEmitter.emit("gameStateUpdated",{timestamp:Date.now()})}}canAfford(e){return e.every(s=>{var t;return((t=this.state.resources[s.resourceId])==null?void 0:t.amount)>=s.amount})}spendResources(e){return this.canAfford(e)?(e.forEach(s=>{this.updateResource(s.resourceId,-s.amount)}),!0):!1}recordSale(e,s,t){this.state.totalSales++,this.state.totalMarketTransactions++,this.eventEmitter.emit("marketTransactionCompleted",{type:"sell",resourceId:e,quantity:s,totalValue:t}),this.eventEmitter.emit("gameStateUpdated",{timestamp:Date.now()})}recordPurchase(e,s,t){this.state.totalMarketTransactions++,this.eventEmitter.emit("marketTransactionCompleted",{type:"buy",resourceId:e,quantity:s,totalValue:t}),this.eventEmitter.emit("gameStateUpdated",{timestamp:Date.now()})}addMachine(e,s){this.state.machines[e]={...s},this.eventEmitter.emit("machineBuilt",{machineId:e,machine:this.state.machines[e]}),this.eventEmitter.emit("gameStateUpdated",{timestamp:Date.now()})}incrementClicks(){this.state.totalClicks++,this.eventEmitter.emit("gameStateUpdated",{timestamp:Date.now()})}checkMilestones(){w.forEach(e=>{!this.state.completedMilestones.has(e.id)&&e.condition(this.state)&&(this.state.completedMilestones.add(e.id),e.reward(this.state,this),this.eventEmitter.emit("milestoneCompleted",{milestoneId:e.id,milestoneName:e.name}),this.addNotification(`Milestone achieved: ${e.name}!`,"success",3e3))}),this.eventEmitter.emit("gameStateUpdated",{timestamp:Date.now()})}updateMachine(e,s){if(this.state.machines[e]){const t=this.state.machines[e].status,a=this.state.machines[e].isActive;Object.assign(this.state.machines[e],s),s.status&&t!==s.status&&this.eventEmitter.emit("machineStatusChanged",{machineId:e,oldStatus:t||"stopped",newStatus:s.status}),s.isActive!==void 0&&a!==s.isActive&&this.eventEmitter.emit("machineToggled",{machineId:e,isActive:s.isActive}),s.level&&s.level>(this.state.machines[e].level||1)&&this.eventEmitter.emit("machineUpgraded",{machineId:e,newLevel:s.level}),this.eventEmitter.emit("gameStateUpdated",{timestamp:Date.now()})}}updatePersonnel(e,s){const t=!!this.state.stockControl.personnel[e];this.state.stockControl.personnel[e]=s,t||this.eventEmitter.emit("personnelHired",{personnelId:e,personnel:s}),this.eventEmitter.emit("gameStateUpdated",{timestamp:Date.now()})}removePersonnel(e){this.state.stockControl.personnel[e]&&(delete this.state.stockControl.personnel[e],this.eventEmitter.emit("personnelFired",{personnelId:e}),this.eventEmitter.emit("gameStateUpdated",{timestamp:Date.now()}))}updateRule(e,s){var i;const t=(i=this.state.stockControl.rules[e])==null?void 0:i.isEnabled,a=!this.state.stockControl.rules[e];this.state.stockControl.rules[e]=s,a?this.eventEmitter.emit("ruleCreated",{ruleId:e,rule:s}):t!==s.isEnabled&&this.eventEmitter.emit("ruleToggled",{ruleId:e,isEnabled:s.isEnabled}),this.eventEmitter.emit("gameStateUpdated",{timestamp:Date.now()})}removeRule(e){this.state.stockControl.rules[e]&&(delete this.state.stockControl.rules[e],this.eventEmitter.emit("ruleDeleted",{ruleId:e}),this.eventEmitter.emit("gameStateUpdated",{timestamp:Date.now()}))}showNotification(e){this.addNotification(e,"success",3e3)}saveGame(){this.state.lastSaveTime=Date.now();const e={...this.state,unlockedRecipes:Array.from(this.state.unlockedRecipes),unlockedMachines:Array.from(this.state.unlockedMachines),unlockedStockControl:Array.from(this.state.unlockedStockControl),completedMilestones:Array.from(this.state.completedMilestones),uiState:{...this.state.uiState,discoveredResources:Array.from(this.state.uiState.discoveredResources)}};localStorage.setItem(this.saveKey,JSON.stringify(e)),this.eventEmitter.emit("gameStateUpdated",{timestamp:Date.now()})}loadGame(){var e,s,t,a,i,o,n;try{const c=localStorage.getItem(this.saveKey);if(!c)return null;const l=JSON.parse(c);return{...l,resources:{...k,...l.resources},machines:Object.fromEntries(Object.entries(l.machines||{}).map(([m,u])=>[m,{...u,status:u.status==="paused"?"stopped":u.status||"stopped",statusMessage:u.statusMessage||void 0}])),unlockedRecipes:new Set(l.unlockedRecipes),unlockedMachines:new Set(l.unlockedMachines),unlockedStockControl:new Set(l.unlockedStockControl||[]),completedMilestones:new Set(l.completedMilestones||[]),stockControl:l.stockControl||{personnel:{},rules:{},lastSalaryPayment:Date.now()},uiState:{discoveredResources:new Set(((e=l.uiState)==null?void 0:e.discoveredResources)||["marks"]),showMarket:((s=l.uiState)==null?void 0:s.showMarket)||!1,showStockControl:((t=l.uiState)==null?void 0:t.showStockControl)||!1,showAdvancedCrafting:((a=l.uiState)==null?void 0:a.showAdvancedCrafting)||!1,showAssemblySystems:((i=l.uiState)==null?void 0:i.showAssemblySystems)||!1,showAutomobileConstruction:((o=l.uiState)==null?void 0:o.showAutomobileConstruction)||!1,panelStates:((n=l.uiState)==null?void 0:n.panelStates)||{}},totalProduced:l.totalProduced||{},totalSales:l.totalSales||0,totalMarketTransactions:l.totalMarketTransactions||0}}catch(c){return console.error("Failed to load game:",c),null}}resetGame(){localStorage.removeItem(this.saveKey),this.state=this.createNewGame(),this.addNotification("Game reset successfully!","success",3e3),this.eventEmitter.emit("gameStateUpdated",{timestamp:Date.now()})}}const p={bendWireSpring:{id:"bendWireSpring",name:"Bend Wire Spring",inputs:[{resourceId:"wireStock",amount:1}],outputs:[{resourceId:"wireSprings",amount:1}],craftTime:2e3,description:"Hand-bend wire into automotive springs",tier:"basic"},makeElectricalWire:{id:"makeElectricalWire",name:"Make Electrical Wire",inputs:[{resourceId:"wireStock",amount:1},{resourceId:"rubber",amount:1}],outputs:[{resourceId:"electricalWire",amount:1}],craftTime:3e3,description:"Insulate wire for electrical systems",tier:"basic"},fileMetalBracket:{id:"fileMetalBracket",name:"File Metal Bracket",inputs:[{resourceId:"sheetMetal",amount:1}],outputs:[{resourceId:"metalBrackets",amount:1}],craftTime:3e3,description:"File and shape mounting brackets",tier:"basic"},shapeMetalRod:{id:"shapeMetalRod",name:"Shape Metal Rod",inputs:[{resourceId:"sheetMetal",amount:1}],outputs:[{resourceId:"metalRods",amount:1}],craftTime:4e3,description:"Shape metal into structural rods",tier:"basic"},forgeMetalPlate:{id:"forgeMetalPlate",name:"Forge Metal Plate",inputs:[{resourceId:"sheetMetal",amount:2}],outputs:[{resourceId:"metalPlates",amount:1}],craftTime:5e3,description:"Forge heavy-duty metal plates",tier:"basic"},cutLeatherGasket:{id:"cutLeatherGasket",name:"Cut Leather Gasket",inputs:[{resourceId:"leatherScraps",amount:1}],outputs:[{resourceId:"leatherGaskets",amount:1}],craftTime:1500,description:"Cut leather into sealing gaskets",tier:"basic"},formRubberTubing:{id:"formRubberTubing",name:"Form Rubber Tubing",inputs:[{resourceId:"rubber",amount:1}],outputs:[{resourceId:"rubberTubing",amount:1}],craftTime:4e3,description:"Form flexible rubber tubing",tier:"basic"},shapeGlassLens:{id:"shapeGlassLens",name:"Shape Glass Lens",inputs:[{resourceId:"glass",amount:1}],outputs:[{resourceId:"glassLenses",amount:1}],craftTime:6e3,description:"Shape glass for lights and gauges",tier:"basic"},cutFabricStrips:{id:"cutFabricStrips",name:"Cut Fabric Strips",inputs:[{resourceId:"fabric",amount:1}],outputs:[{resourceId:"fabricStrips",amount:2}],craftTime:2e3,description:"Cut fabric into usable strips",tier:"basic"},cutWoodPlanks:{id:"cutWoodPlanks",name:"Cut Wood Planks",inputs:[{resourceId:"wood",amount:1}],outputs:[{resourceId:"woodPlanks",amount:2}],craftTime:3e3,description:"Cut wood into usable planks",tier:"basic"},buildWoodFrame:{id:"buildWoodFrame",name:"Build Wood Frame",inputs:[{resourceId:"woodPlanks",amount:2},{resourceId:"metalBrackets",amount:2}],outputs:[{resourceId:"woodFrames",amount:1}],craftTime:8e3,description:"Build reinforced wooden frame",tier:"basic"},machinePiston:{id:"machinePiston",name:"Machine Piston",inputs:[{resourceId:"metalRods",amount:2},{resourceId:"metalPlates",amount:1}],outputs:[{resourceId:"pistons",amount:1}],craftTime:15e3,description:"Machine precision engine pistons",tier:"advanced"},forgeCrankshaft:{id:"forgeCrankshaft",name:"Forge Crankshaft",inputs:[{resourceId:"metalRods",amount:3},{resourceId:"bearings",amount:2}],outputs:[{resourceId:"crankshaft",amount:1}],craftTime:2e4,description:"Forge engine crankshaft",tier:"advanced"},assembleValve:{id:"assembleValve",name:"Assemble Valve",inputs:[{resourceId:"metalRods",amount:1},{resourceId:"wireSprings",amount:1}],outputs:[{resourceId:"valves",amount:1}],craftTime:12e3,description:"Assemble engine valve mechanism",tier:"advanced"},craftSparkPlug:{id:"craftSparkPlug",name:"Craft Spark Plug",inputs:[{resourceId:"metalRods",amount:1},{resourceId:"electricalWire",amount:1}],outputs:[{resourceId:"sparkPlugs",amount:1}],craftTime:1e4,description:"Craft electrical ignition spark plug",tier:"advanced"},machineGear:{id:"machineGear",name:"Machine Gear",inputs:[{resourceId:"metalPlates",amount:2},{resourceId:"coal",amount:1}],outputs:[{resourceId:"gears",amount:1}],craftTime:18e3,description:"Machine precision transmission gear",tier:"advanced"},craftBearing:{id:"craftBearing",name:"Craft Bearing",inputs:[{resourceId:"metalRods",amount:1},{resourceId:"oil",amount:1}],outputs:[{resourceId:"bearings",amount:1}],craftTime:8e3,description:"Craft smooth-running bearing",tier:"advanced"},assembleClutchPlate:{id:"assembleClutchPlate",name:"Assemble Clutch Plate",inputs:[{resourceId:"metalPlates",amount:2},{resourceId:"fabricStrips",amount:1}],outputs:[{resourceId:"clutchPlates",amount:1}],craftTime:14e3,description:"Assemble power engagement clutch plate",tier:"advanced"},buildLeafSpring:{id:"buildLeafSpring",name:"Build Leaf Spring",inputs:[{resourceId:"wireSprings",amount:3},{resourceId:"metalBrackets",amount:2}],outputs:[{resourceId:"leafSprings",amount:1}],craftTime:16e3,description:"Build heavy-duty leaf spring suspension",tier:"advanced"},forgeAxle:{id:"forgeAxle",name:"Forge Axle",inputs:[{resourceId:"metalRods",amount:2},{resourceId:"bearings",amount:2}],outputs:[{resourceId:"axles",amount:1}],craftTime:22e3,description:"Forge wheel mounting axle",tier:"advanced"},craftBrakeShoe:{id:"craftBrakeShoe",name:"Craft Brake Shoe",inputs:[{resourceId:"metalPlates",amount:1},{resourceId:"leatherGaskets",amount:1}],outputs:[{resourceId:"brakeShoes",amount:1}],craftTime:1e4,description:"Craft stopping mechanism brake shoe",tier:"advanced"},formBodyPanel:{id:"formBodyPanel",name:"Form Body Panel",inputs:[{resourceId:"metalPlates",amount:2},{resourceId:"metalBrackets",amount:1}],outputs:[{resourceId:"bodyPanels",amount:1}],craftTime:12e3,description:"Form vehicle exterior body panel",tier:"advanced"},upholsterSeat:{id:"upholsterSeat",name:"Upholster Seat",inputs:[{resourceId:"woodFrames",amount:1},{resourceId:"fabricStrips",amount:2},{resourceId:"leatherGaskets",amount:1}],outputs:[{resourceId:"seats",amount:1}],craftTime:18e3,description:"Upholster comfortable vehicle seat",tier:"advanced"},buildDashboard:{id:"buildDashboard",name:"Build Dashboard",inputs:[{resourceId:"woodPlanks",amount:1},{resourceId:"glassLenses",amount:2}],outputs:[{resourceId:"dashboard",amount:1}],craftTime:15e3,description:"Build instrument dashboard",tier:"advanced"},assembleBattery:{id:"assembleBattery",name:"Assemble Battery",inputs:[{resourceId:"lead",amount:2},{resourceId:"rubberTubing",amount:1}],outputs:[{resourceId:"batteries",amount:1}],craftTime:25e3,description:"Assemble electrical power storage battery",tier:"advanced"},buildHeadlight:{id:"buildHeadlight",name:"Build Headlight",inputs:[{resourceId:"glassLenses",amount:1},{resourceId:"metalBrackets",amount:1},{resourceId:"electricalWire",amount:1}],outputs:[{resourceId:"headlights",amount:1}],craftTime:14e3,description:"Build vehicle headlight assembly",tier:"advanced"},assembleWiringHarness:{id:"assembleWiringHarness",name:"Assemble Wiring Harness",inputs:[{resourceId:"electricalWire",amount:5},{resourceId:"rubberTubing",amount:2}],outputs:[{resourceId:"wiringHarness",amount:1}],craftTime:2e4,description:"Assemble complete electrical wiring system",tier:"advanced"},assembleEngine:{id:"assembleEngine",name:"Assemble Engine",inputs:[{resourceId:"pistons",amount:4},{resourceId:"crankshaft",amount:1},{resourceId:"valves",amount:8},{resourceId:"sparkPlugs",amount:4},{resourceId:"metalPlates",amount:2}],outputs:[{resourceId:"engineAssembly",amount:1}],craftTime:45e3,description:"Assemble complete engine power unit",tier:"assembly"},assembleTransmission:{id:"assembleTransmission",name:"Assemble Transmission",inputs:[{resourceId:"gears",amount:6},{resourceId:"bearings",amount:4},{resourceId:"clutchPlates",amount:2},{resourceId:"metalPlates",amount:1}],outputs:[{resourceId:"transmissionAssembly",amount:1}],craftTime:35e3,description:"Assemble complete power transfer system",tier:"assembly"},assembleChassis:{id:"assembleChassis",name:"Assemble Chassis",inputs:[{resourceId:"woodFrames",amount:1},{resourceId:"leafSprings",amount:2},{resourceId:"axles",amount:2},{resourceId:"brakeShoes",amount:4},{resourceId:"metalBrackets",amount:4}],outputs:[{resourceId:"chassisAssembly",amount:1}],craftTime:4e4,description:"Assemble complete vehicle foundation",tier:"assembly"},assembleBody:{id:"assembleBody",name:"Assemble Body",inputs:[{resourceId:"bodyPanels",amount:6},{resourceId:"seats",amount:2},{resourceId:"dashboard",amount:1},{resourceId:"woodFrames",amount:2}],outputs:[{resourceId:"bodyAssembly",amount:1}],craftTime:3e4,description:"Assemble complete vehicle body and interior",tier:"assembly"},assembleWheel:{id:"assembleWheel",name:"Assemble Wheel",inputs:[{resourceId:"metalRods",amount:1},{resourceId:"wireSprings",amount:8},{resourceId:"rubberTubing",amount:1}],outputs:[{resourceId:"wheelAssembly",amount:1}],craftTime:2e4,description:"Assemble complete wheel unit",tier:"assembly"},assembleElectricalSystem:{id:"assembleElectricalSystem",name:"Assemble Electrical System",inputs:[{resourceId:"batteries",amount:1},{resourceId:"headlights",amount:2},{resourceId:"wiringHarness",amount:1},{resourceId:"electricalWire",amount:2}],outputs:[{resourceId:"electricalSystem",amount:1}],craftTime:25e3,description:"Assemble complete electrical and lighting system",tier:"assembly"},assembleFuelSystem:{id:"assembleFuelSystem",name:"Assemble Fuel System",inputs:[{resourceId:"metalPlates",amount:1},{resourceId:"rubberTubing",amount:2},{resourceId:"valves",amount:1}],outputs:[{resourceId:"fuelSystem",amount:1}],craftTime:15e3,description:"Assemble complete fuel storage and delivery system",tier:"assembly"},constructAutomobile:{id:"constructAutomobile",name:"Construct Automobile",inputs:[{resourceId:"engineAssembly",amount:1},{resourceId:"transmissionAssembly",amount:1},{resourceId:"chassisAssembly",amount:1},{resourceId:"bodyAssembly",amount:1},{resourceId:"wheelAssembly",amount:4},{resourceId:"electricalSystem",amount:1},{resourceId:"fuelSystem",amount:1}],outputs:[{resourceId:"automobile",amount:1}],craftTime:18e4,description:"Construct complete early 1900s automobile",tier:"automobile"}};class R{constructor(e){d(this,"gameState");d(this,"activeCrafts",new Map);this.gameState=e}canCraft(e){const s=p[e];return!s||!this.gameState.getState().unlockedRecipes.has(e)?!1:this.gameState.canAfford(s.inputs)}startCraft(e){if(!this.canCraft(e)||this.activeCrafts.has(e))return!1;const s=p[e];if(!this.gameState.spendResources(s.inputs))return!1;if(this.gameState.incrementClicks(),this.gameState.getEventEmitter().emit("craftStarted",{recipeId:e}),s.craftTime===0)this.completeCraft(e);else{const t=Date.now()+s.craftTime;this.activeCrafts.set(e,t),setTimeout(()=>{this.completeCraft(e)},s.craftTime)}return!0}completeCraft(e){const s=p[e];s&&(this.activeCrafts.delete(e),s.outputs.forEach(t=>{this.gameState.updateResource(t.resourceId,t.amount)}),this.gameState.getEventEmitter().emit("craftCompleted",{recipeId:e,outputs:s.outputs}),this.gameState.checkMilestones())}getCraftProgress(e){const s=this.activeCrafts.get(e);if(!s)return 0;const t=p[e];if(!t||t.craftTime===0)return 0;const a=s-t.craftTime,i=Date.now()-a;return Math.min(1,Math.max(0,i/t.craftTime))}isCrafting(e){return this.activeCrafts.has(e)}getAvailableRecipes(){const e=this.gameState.getState();return Object.values(p).filter(s=>e.unlockedRecipes.has(s.id))}}const v={wireBendingJig:{id:"wireBendingJig",name:"Wire Bending Jig",recipeId:"bendWireSpring",level:1,cost:[{resourceId:"metalBrackets",amount:2},{resourceId:"marks",amount:15}],upgradeCost:[{resourceId:"metalBrackets",amount:3},{resourceId:"marks",amount:25}],productionRate:2,isActive:!1,lastProduction:0,description:"Automates wire spring production"},filingStation:{id:"filingStation",name:"Filing Station",recipeId:"fileMetalBracket",level:1,cost:[{resourceId:"wireSprings",amount:5},{resourceId:"marks",amount:20}],upgradeCost:[{resourceId:"wireSprings",amount:8},{resourceId:"marks",amount:35}],productionRate:2,isActive:!1,lastProduction:0,description:"Automates bracket filing and shaping"},pistonPress:{id:"pistonPress",name:"Piston Press",recipeId:"machinePiston",level:1,cost:[{resourceId:"metalPlates",amount:3},{resourceId:"gears",amount:2},{resourceId:"marks",amount:100}],upgradeCost:[{resourceId:"metalPlates",amount:4},{resourceId:"gears",amount:3},{resourceId:"marks",amount:150}],productionRate:1.8,isActive:!1,lastProduction:0,description:"Automates precision piston manufacturing"},gearCuttingMachine:{id:"gearCuttingMachine",name:"Gear Cutting Machine",recipeId:"machineGear",level:1,cost:[{resourceId:"metalPlates",amount:4},{resourceId:"bearings",amount:3},{resourceId:"marks",amount:120}],upgradeCost:[{resourceId:"metalPlates",amount:5},{resourceId:"bearings",amount:4},{resourceId:"marks",amount:180}],productionRate:1.7,isActive:!1,lastProduction:0,description:"Automates precision gear manufacturing"},engineAssemblyRig:{id:"engineAssemblyRig",name:"Engine Assembly Rig",recipeId:"assembleEngine",level:1,cost:[{resourceId:"metalPlates",amount:6},{resourceId:"gears",amount:4},{resourceId:"bearings",amount:6},{resourceId:"marks",amount:300}],upgradeCost:[{resourceId:"metalPlates",amount:8},{resourceId:"gears",amount:6},{resourceId:"bearings",amount:8},{resourceId:"marks",amount:450}],productionRate:1.5,isActive:!1,lastProduction:0,description:"Automates complex engine assembly process"},chassisAssemblyRig:{id:"chassisAssemblyRig",name:"Chassis Assembly Rig",recipeId:"assembleChassis",level:1,cost:[{resourceId:"metalPlates",amount:5},{resourceId:"axles",amount:2},{resourceId:"leafSprings",amount:2},{resourceId:"marks",amount:250}],upgradeCost:[{resourceId:"metalPlates",amount:7},{resourceId:"axles",amount:3},{resourceId:"leafSprings",amount:3},{resourceId:"marks",amount:375}],productionRate:1.6,isActive:!1,lastProduction:0,description:"Automates chassis assembly process"},advancedWireBendingJig:{id:"advancedWireBendingJig",name:"Advanced Wire Bending Jig",recipeId:"bendWireSpring",level:1,cost:[{resourceId:"gears",amount:3},{resourceId:"bearings",amount:4},{resourceId:"electricalWire",amount:5},{resourceId:"marks",amount:200}],upgradeCost:[{resourceId:"gears",amount:4},{resourceId:"bearings",amount:6},{resourceId:"electricalWire",amount:7},{resourceId:"marks",amount:300}],productionRate:.8,isActive:!1,lastProduction:0,description:"High-speed automated wire spring production"},advancedFilingStation:{id:"advancedFilingStation",name:"Advanced Filing Station",recipeId:"fileMetalBracket",level:1,cost:[{resourceId:"gears",amount:2},{resourceId:"bearings",amount:3},{resourceId:"electricalWire",amount:4},{resourceId:"marks",amount:180}],upgradeCost:[{resourceId:"gears",amount:3},{resourceId:"bearings",amount:5},{resourceId:"electricalWire",amount:6},{resourceId:"marks",amount:270}],productionRate:.9,isActive:!1,lastProduction:0,description:"High-precision automated bracket production"},assemblyLine:{id:"assemblyLine",name:"Assembly Line",recipeId:"constructAutomobile",level:1,cost:[{resourceId:"metalPlates",amount:10},{resourceId:"gears",amount:8},{resourceId:"bearings",amount:12},{resourceId:"electricalSystem",amount:2},{resourceId:"marks",amount:1e3}],upgradeCost:[{resourceId:"metalPlates",amount:15},{resourceId:"gears",amount:12},{resourceId:"bearings",amount:18},{resourceId:"electricalSystem",amount:3},{resourceId:"marks",amount:1500}],productionRate:1.2,isActive:!1,lastProduction:0,description:"Automated automobile assembly line"}};class ${constructor(e){d(this,"gameState");this.gameState=e}canBuildMachine(e){const s=v[e];if(!s)return!1;const t=this.gameState.getState();return!t.unlockedMachines.has(e)||t.machines[e]?!1:this.gameState.canAfford(s.cost)}buildMachine(e){if(!this.canBuildMachine(e))return!1;const s=v[e];if(!this.gameState.spendResources(s.cost))return!1;const t=p[s.recipeId],a=t?this.gameState.canAfford(t.inputs):!1,i={...s,lastProduction:Date.now(),isActive:!1,status:a?"paused":"waiting_resources",statusMessage:void 0};return this.gameState.addMachine(e,i),!0}canUpgradeMachine(e){const t=this.gameState.getState().machines[e];if(!t)return!1;const a=t.upgradeCost.map(i=>({...i,amount:i.amount*t.level}));return this.gameState.canAfford(a)}upgradeMachine(e){if(!this.canUpgradeMachine(e))return!1;const t=this.gameState.getState().machines[e],a=t.upgradeCost.map(o=>({...o,amount:o.amount*t.level}));if(!this.gameState.spendResources(a))return!1;const i={level:t.level+1,productionRate:Math.max(.5,t.productionRate*.85)};return this.gameState.updateMachine(e,i),!0}toggleMachine(e){const s=this.gameState.getState(),t=s.machines[e];if(t){const a=t.isActive,i={isActive:!a};if(a)i.status="stopped",i.statusMessage="Manually stopped";else{const o=p[t.recipeId];if(o&&this.gameState.canAfford(o.inputs))i.lastProduction=Date.now(),i.status="running",i.statusMessage=void 0;else{const n=o?o.inputs.filter(c=>{var m;return(((m=s.resources[c.resourceId])==null?void 0:m.amount)||0)<c.amount}).map(c=>{const l=s.resources[c.resourceId],m=(l==null?void 0:l.amount)||0;return`${(l==null?void 0:l.name)||c.resourceId} (need ${c.amount}, have ${Math.floor(m)})`}):[];i.status="waiting_resources",i.statusMessage=n.length>0?`Waiting for: ${n.join(", ")}`:"Waiting for resources"}}this.gameState.updateMachine(e,i)}}updateMachines(){const e=this.gameState.getState(),s=Date.now();Object.values(e.machines).forEach(t=>{let a={},i=!1;if(!t.isActive){(t.status!=="stopped"||t.statusMessage!=="Manually stopped")&&(a.status="stopped",a.statusMessage="Manually stopped",i=!0),i&&this.gameState.updateMachine(t.id,a);return}const o=p[t.recipeId];if(!o)return;const n=o.craftTime*t.productionRate;if(s-t.lastProduction>=n)if(this.gameState.canAfford(o.inputs))this.gameState.spendResources(o.inputs),o.outputs.forEach(l=>{this.gameState.updateResource(l.resourceId,l.amount)}),a.lastProduction=s,a.status="running",a.statusMessage=void 0,i=!0,this.gameState.checkMilestones();else{const l=o.inputs.filter(m=>{var h;return(((h=e.resources[m.resourceId])==null?void 0:h.amount)||0)<m.amount}).map(m=>{const u=e.resources[m.resourceId],h=(u==null?void 0:u.amount)||0;return`${(u==null?void 0:u.name)||m.resourceId} (need ${m.amount}, have ${Math.floor(h)})`});t.status!=="waiting_resources"&&(a.status="waiting_resources",a.statusMessage=`Waiting for: ${l.join(", ")}`,i=!0)}else t.status==="waiting_resources"?this.gameState.canAfford(o.inputs)&&(a.status="running",a.statusMessage=void 0,i=!0,a.lastProduction=s-n):t.status!=="running"&&t.status!=="waiting_resources"&&(a.status="running",a.statusMessage=void 0,i=!0);i&&this.gameState.updateMachine(t.id,a)})}getMachineProgress(e){const t=this.gameState.getState().machines[e];if(!t||!t.isActive||t.status!=="running")return 0;const a=p[t.recipeId];if(!a)return 0;const i=a.craftTime*t.productionRate,o=Date.now()-t.lastProduction;return Math.min(1,o/i)}getAvailableMachines(){const e=this.gameState.getState();return Array.from(e.unlockedMachines)}}const g={wireStock:{resourceId:"wireStock",buyPrice:2,sellPrice:2,available:!0},sheetMetal:{resourceId:"sheetMetal",buyPrice:3,sellPrice:3,available:!0},leatherScraps:{resourceId:"leatherScraps",buyPrice:1,sellPrice:1,available:!0},oil:{resourceId:"oil",buyPrice:4,sellPrice:4,available:!0},wood:{resourceId:"wood",buyPrice:5,sellPrice:5,available:!0},rubber:{resourceId:"rubber",buyPrice:6,sellPrice:6,available:!0},glass:{resourceId:"glass",buyPrice:8,sellPrice:8,available:!0},lead:{resourceId:"lead",buyPrice:10,sellPrice:10,available:!0},fabric:{resourceId:"fabric",buyPrice:3,sellPrice:3,available:!0},coal:{resourceId:"coal",buyPrice:2,sellPrice:2,available:!0},wireSprings:{resourceId:"wireSprings",buyPrice:3,sellPrice:3,available:!0},electricalWire:{resourceId:"electricalWire",buyPrice:8,sellPrice:8,available:!0},metalBrackets:{resourceId:"metalBrackets",buyPrice:5,sellPrice:5,available:!0},metalRods:{resourceId:"metalRods",buyPrice:6,sellPrice:6,available:!0},metalPlates:{resourceId:"metalPlates",buyPrice:8,sellPrice:8,available:!0},leatherGaskets:{resourceId:"leatherGaskets",buyPrice:2,sellPrice:2,available:!0},rubberTubing:{resourceId:"rubberTubing",buyPrice:8,sellPrice:8,available:!0},glassLenses:{resourceId:"glassLenses",buyPrice:10,sellPrice:10,available:!0},fabricStrips:{resourceId:"fabricStrips",buyPrice:2,sellPrice:2,available:!0},woodPlanks:{resourceId:"woodPlanks",buyPrice:3,sellPrice:3,available:!0},woodFrames:{resourceId:"woodFrames",buyPrice:15,sellPrice:15,available:!0},pistons:{resourceId:"pistons",buyPrice:25,sellPrice:25,available:!0},crankshaft:{resourceId:"crankshaft",buyPrice:40,sellPrice:40,available:!0},valves:{resourceId:"valves",buyPrice:15,sellPrice:15,available:!0},sparkPlugs:{resourceId:"sparkPlugs",buyPrice:20,sellPrice:20,available:!0},gears:{resourceId:"gears",buyPrice:30,sellPrice:30,available:!0},bearings:{resourceId:"bearings",buyPrice:12,sellPrice:12,available:!0},clutchPlates:{resourceId:"clutchPlates",buyPrice:25,sellPrice:25,available:!0},leafSprings:{resourceId:"leafSprings",buyPrice:20,sellPrice:20,available:!0},axles:{resourceId:"axles",buyPrice:35,sellPrice:35,available:!0},brakeShoes:{resourceId:"brakeShoes",buyPrice:15,sellPrice:15,available:!0},bodyPanels:{resourceId:"bodyPanels",buyPrice:20,sellPrice:20,available:!0},seats:{resourceId:"seats",buyPrice:25,sellPrice:25,available:!0},dashboard:{resourceId:"dashboard",buyPrice:30,sellPrice:30,available:!0},batteries:{resourceId:"batteries",buyPrice:45,sellPrice:45,available:!0},headlights:{resourceId:"headlights",buyPrice:35,sellPrice:35,available:!0},wiringHarness:{resourceId:"wiringHarness",buyPrice:50,sellPrice:50,available:!0},engineAssembly:{resourceId:"engineAssembly",buyPrice:200,sellPrice:200,available:!0},transmissionAssembly:{resourceId:"transmissionAssembly",buyPrice:150,sellPrice:150,available:!0},chassisAssembly:{resourceId:"chassisAssembly",buyPrice:180,sellPrice:180,available:!0},bodyAssembly:{resourceId:"bodyAssembly",buyPrice:160,sellPrice:160,available:!0},wheelAssembly:{resourceId:"wheelAssembly",buyPrice:25,sellPrice:25,available:!0},electricalSystem:{resourceId:"electricalSystem",buyPrice:140,sellPrice:140,available:!0},fuelSystem:{resourceId:"fuelSystem",buyPrice:35,sellPrice:35,available:!0},automobile:{resourceId:"automobile",buyPrice:1e3,sellPrice:1e3,available:!0}};class M{constructor(e){d(this,"gameState");this.gameState=e}canBuy(e,s=1){const t=g[e];if(!t||!t.available||!t.buyPrice)return!1;const a=t.buyPrice*s;return this.gameState.getState().resources.marks.amount>=a}buy(e,s=1){if(!this.canBuy(e,s))return!1;const a=g[e].buyPrice*s;return this.gameState.updateResource("marks",-a),this.gameState.updateResource(e,s),this.gameState.recordPurchase(e,s,a),!0}canSell(e,s=1){var a;const t=g[e];return!t||!t.available||!t.sellPrice?!1:((a=this.gameState.getState().resources[e])==null?void 0:a.amount)>=s}sell(e,s=1){if(!this.canSell(e,s))return!1;const a=g[e].sellPrice*s;return this.gameState.updateResource(e,-s),this.gameState.updateResource("marks",a),this.gameState.recordSale(e,s,a),!0}getBuyableItems(){const e=this.gameState.getState();return e.uiState.showMarket?Object.entries(g).filter(([s,t])=>t.available&&t.buyPrice).map(([s,t])=>{var a;return{resourceId:s,price:t.buyPrice,name:((a=e.resources[s])==null?void 0:a.name)||s}}):[]}getSellableItems(){const e=this.gameState.getState();return e.uiState.showMarket?Object.entries(g).filter(([s,t])=>{var a;return t.available&&t.sellPrice&&((a=e.resources[s])==null?void 0:a.amount)>0}).map(([s,t])=>{var a,i;return{resourceId:s,price:t.sellPrice,name:((a=e.resources[s])==null?void 0:a.name)||s,available:((i=e.resources[s])==null?void 0:i.amount)||0}}):[]}}class T{constructor(e){d(this,"gameState");this.gameState=e}salvageMaterials(){const e=[{resourceId:"wireStock",amount:1},{resourceId:"sheetMetal",amount:1},{resourceId:"leatherScraps",amount:1},{resourceId:"oil",amount:1}],s=Math.floor(Math.random()*e.length),t=e[s];this.gameState.updateResource(t.resourceId,t.amount),this.gameState.getEventEmitter().emit("materialSalvaged",{resourceId:t.resourceId,amount:t.amount}),this.gameState.incrementClicks()}canSalvage(){return!0}}class L{constructor(e,s){d(this,"gameState");d(this,"marketSystem");d(this,"lastUpdate",Date.now());d(this,"lastRuleExecution",0);this.gameState=e,this.marketSystem=s}canHirePersonnel(e){const s=this.gameState.getState();if(s.stockControl.personnel[e]||!s.unlockedStockControl.has(e))return!1;const t=this.getPersonnelTemplate(e);if(!t)return!1;const a=t.hiringCost+t.monthlySalary;return s.resources.marks.amount>=a}hirePersonnel(e){if(!this.canHirePersonnel(e))return!1;const s=this.getPersonnelTemplate(e);if(!s)return!1;this.gameState.getState();const t=s.hiringCost+s.monthlySalary;if(!this.gameState.spendResources([{resourceId:"marks",amount:t}]))return!1;const a={...s,isActive:!0,hiredAt:Date.now()};return this.gameState.updatePersonnel(e,a),!0}firePersonnel(e){const s=this.gameState.getState();s.stockControl.personnel[e]&&(Object.values(s.stockControl.rules).forEach(t=>{t.managedBy===e&&this.updateRule(t.id,{...t,isEnabled:!1})}),this.gameState.removePersonnel(e))}createRule(e,s,t,a,i){const o=`${s}_${e}_${Date.now()}`,n={id:o,resourceId:e,type:s,threshold:t,quantity:a,isEnabled:!0,managedBy:i};return this.gameState.updateRule(o,n),o}updateRule(e,s){const a=this.gameState.getState().stockControl.rules[e];if(a){const i={...a,...s};this.gameState.updateRule(e,i)}}deleteRule(e){this.gameState.removeRule(e)}update(){const e=Date.now(),s=e-this.lastUpdate;this.lastUpdate=e,this.paySalaries(s),this.executeRules()}paySalaries(e){const s=this.gameState.getState(),t=e/(1e3*10);let a=0;Object.values(s.stockControl.personnel).forEach(i=>{i.isActive&&(a+=i.monthlySalary*t)}),a>0&&(s.resources.marks.amount>=a?this.gameState.updateResource("marks",-a):(this.fireAllPersonnel(),this.gameState.showNotification("⚠️ All stock control personnel quit due to unpaid salaries!")))}executeRules(){const e=this.gameState.getState(),s=Date.now();this.lastRuleExecution||(this.lastRuleExecution=s),!(s-this.lastRuleExecution<5e3)&&(this.lastRuleExecution=s,Object.values(e.stockControl.rules).forEach(t=>{var o;if(!t.isEnabled)return;const a=e.stockControl.personnel[t.managedBy];if(!a||!a.isActive){this.updateRule(t.id,{...t,isEnabled:!1});return}const i=((o=e.resources[t.resourceId])==null?void 0:o.amount)||0;if(t.type==="buy"&&i<t.threshold)this.marketSystem.canBuy(t.resourceId,t.quantity)&&this.marketSystem.buy(t.resourceId,t.quantity);else if(t.type==="sell"&&i>t.threshold){const n=Math.min(t.quantity,i-t.threshold);n>0&&this.marketSystem.canSell(t.resourceId,n)&&this.marketSystem.sell(t.resourceId,n)}}))}fireAllPersonnel(){const e=this.gameState.getState();Object.keys(e.stockControl.personnel).forEach(s=>{this.firePersonnel(s)})}getActivePersonnel(){const e=this.gameState.getState();return Object.values(e.stockControl.personnel).filter(s=>s.isActive)}getActiveRules(){const e=this.gameState.getState();return Object.values(e.stockControl.rules).filter(s=>s.isEnabled)}getTotalMonthlyCost(){return this.getActivePersonnel().reduce((e,s)=>e+s.monthlySalary,0)}getPersonnelTemplate(e){return{procurementSpecialist:{id:"procurementSpecialist",name:"Material Procurement Specialist",type:"procurement",monthlySalary:2,hiringCost:50,isActive:!1,hiredAt:0,description:"Automatically purchases raw materials when inventory falls below set thresholds",capabilities:["Auto-buy raw materials","Inventory monitoring","Basic purchasing"]},salesManager:{id:"salesManager",name:"Sales Manager",type:"sales",monthlySalary:3,hiringCost:50,isActive:!1,hiredAt:0,description:"Automatically sells finished products when inventory exceeds set thresholds",capabilities:["Auto-sell products","Inventory monitoring","Basic sales"]},supplyChainCoordinator:{id:"supplyChainCoordinator",name:"Supply Chain Coordinator",type:"coordinator",monthlySalary:5,hiringCost:100,isActive:!1,hiredAt:0,description:"Advanced optimization of both buying and selling with profit margin analysis",capabilities:["Advanced optimization","Profit analysis","Full supply chain management"]}}[e]||null}getAvailablePersonnel(){const e=this.gameState.getState();return Array.from(e.unlockedStockControl)}}class D{constructor(e,s,t,a,i){this.gameState=e,this.craftingSystem=s,this.automationManager=t,this.marketSystem=a,this.stockControlSystem=i}getResourcesData(){const e=this.gameState.getState();return Object.values(e.resources).filter(s=>e.uiState.discoveredResources.has(s.id)&&s.id!=="marks").map(s=>{const t=g[s.id];return{id:s.id,name:s.name,amount:s.amount,displayAmount:Math.floor(s.amount).toString(),canBuy:this.marketSystem.canBuy(s.id),canSell:this.marketSystem.canSell(s.id),buyPrice:t==null?void 0:t.buyPrice,sellPrice:t==null?void 0:t.sellPrice,isDiscovered:e.uiState.discoveredResources.has(s.id)}})}getCraftingDataByTier(){const e=this.gameState.getState(),t=this.craftingSystem.getAvailableRecipes().map(a=>({recipeId:a.id,name:a.name,description:a.description,canCraft:this.craftingSystem.canCraft(a.id),isCrafting:this.craftingSystem.isCrafting(a.id),progress:this.craftingSystem.getCraftProgress(a.id),craftTime:a.craftTime,tier:a.tier,inputs:a.inputs.map(i=>{const o=e.resources[i.resourceId];return{resourceId:i.resourceId,name:(o==null?void 0:o.name)||i.resourceId,amount:i.amount,available:(o==null?void 0:o.amount)||0}}),outputs:a.outputs.map(i=>{const o=e.resources[i.resourceId];return{resourceId:i.resourceId,name:(o==null?void 0:o.name)||i.resourceId,amount:i.amount}})}));return{basic:t.filter(a=>a.tier==="basic"),advanced:t.filter(a=>a.tier==="advanced"),assembly:t.filter(a=>a.tier==="assembly"),automobile:t.filter(a=>a.tier==="automobile")}}getCraftingData(){const e=this.getCraftingDataByTier();return[...e.basic,...e.advanced,...e.assembly,...e.automobile]}getMachinesData(){const e=this.gameState.getState();return Object.values(e.machines).map(s=>{const t=p[s.recipeId],a=this.automationManager.getMachineProgress(s.id),i=t?(t.craftTime*s.productionRate/1e3).toFixed(1):"0",o=t?(t.craftTime/1e3).toFixed(1):"0",n=t?Math.round(1/s.productionRate*100):100;return{id:s.id,name:s.name,level:s.level,isActive:s.isActive,status:s.status||"stopped",statusMessage:s.statusMessage,progress:a,canUpgrade:this.automationManager.canUpgradeMachine(s.id),upgradeCost:s.upgradeCost.map(c=>{const l=e.resources[c.resourceId],m=c.amount*s.level;return{resourceId:c.resourceId,name:(l==null?void 0:l.name)||c.resourceId,amount:m}}),efficiency:n,currentSpeed:i,manualSpeed:o}})}getAvailableMachinesData(){const e=this.gameState.getState();return this.automationManager.getAvailableMachines().filter(t=>!e.machines[t]).map(t=>{const a=v[t];return{id:t,name:a.name,description:a.description,canBuild:this.automationManager.canBuildMachine(t),cost:a.cost.map(i=>{const o=e.resources[i.resourceId];return{resourceId:i.resourceId,name:(o==null?void 0:o.name)||i.resourceId,amount:i.amount}})}})}getPersonnelData(){const e=this.gameState.getState(),s=this.stockControlSystem.getAvailablePersonnel(),t=this.stockControlSystem.getActivePersonnel(),a=this.stockControlSystem.getActiveRules(),i=s.filter(n=>!e.stockControl.personnel[n]).map(n=>{const c=this.stockControlSystem.getPersonnelTemplate(n);if(!c)throw new Error(`Personnel template not found: ${n}`);return{id:c.id,name:c.name,type:c.type,monthlySalary:c.monthlySalary,hiringCost:c.hiringCost,totalCost:c.hiringCost+c.monthlySalary,canHire:this.stockControlSystem.canHirePersonnel(n),isActive:!1,description:c.description,capabilities:c.capabilities,managedRulesCount:0}}),o=t.map(n=>{const c=a.filter(l=>l.managedBy===n.id).length;return{id:n.id,name:n.name,type:n.type,monthlySalary:n.monthlySalary,hiringCost:n.hiringCost,totalCost:n.hiringCost+n.monthlySalary,canHire:!1,isActive:!0,description:n.description,capabilities:n.capabilities,managedRulesCount:c}});return{available:i,active:o,totalMonthlyCost:this.stockControlSystem.getTotalMonthlyCost()}}getRulesData(){const e=this.gameState.getState();return this.stockControlSystem.getActiveRules().map(t=>{const a=e.resources[t.resourceId],i=e.stockControl.personnel[t.managedBy];return{id:t.id,resourceName:(a==null?void 0:a.name)||t.resourceId,type:t.type,threshold:t.threshold,quantity:t.quantity,isEnabled:t.isEnabled,managerName:(i==null?void 0:i.name)||"Unknown"}})}getUIStateData(){const e=this.gameState.getState();return{showMarket:e.uiState.showMarket,showStockControl:e.uiState.showStockControl,showAdvancedCrafting:e.uiState.showAdvancedCrafting,showAssemblySystems:e.uiState.showAssemblySystems,showAutomobileConstruction:e.uiState.showAutomobileConstruction,panelStates:e.uiState.panelStates,marksAmount:Math.floor(e.resources.marks.amount)}}getGameStats(){const e=this.gameState.getState();return{totalClicks:e.totalClicks,totalSales:e.totalSales,totalMarketTransactions:e.totalMarketTransactions,gameStartTime:e.gameStartTime,lastSaveTime:e.lastSaveTime}}}class B{constructor(e){this.actions=e}render(e){const s=e.filter(i=>i.tier==="basic"),t=s.map(i=>{const o=i.craftTime>0?` (${i.craftTime/1e3}s)`:"",n=i.inputs.map(l=>`${l.amount} ${l.name}`).join(", "),c=i.outputs.map(l=>`${l.amount} ${l.name}`).join(", ");return`
        <div class="craft-item">
          <button 
            class="craft-btn ${i.canCraft&&!i.isCrafting?"available":"disabled"}" 
            data-recipe="${i.recipeId}"
            ${!i.canCraft||i.isCrafting?"disabled":""}
          >
            <div class="craft-content">
              <div class="craft-name">${i.name}${o}</div>
              <div class="craft-details ${i.isCrafting?"hidden":""}">
                <div class="craft-inputs">Needs: ${n}</div>
                <div class="craft-outputs">Makes: ${c}</div>
              </div>
              <div class="progress-bar-container">
                <div class="progress-bar ${i.isCrafting?"visible":"hidden"}">
                  <div class="progress-fill" style="width: ${i.progress*100}%"></div>
                </div>
              </div>
            </div>
          </button>
        </div>
      `}).join("");return`
      <div class="panel crafting-panel">
        <h3>🔨 Basic Crafting</h3>
        
      <div class="salvage-section">
        <button 
          id="salvage-materials-btn" 
          class="craft-btn available"
        >
          <div class="craft-name">🔍 Salvage Materials</div>
          <div class="craft-outputs">Find: 1 random material (Wire Stock, Sheet Metal, Leather Scraps, or Oil)</div>
        </button>
      </div>
    
        ${s.length>0?`
          <h4>Basic Components</h4>
        `:""}
        <div class="crafting-list">
          ${t}
        </div>
      </div>
    `}attachEventListeners(e){var s;(s=e.querySelector("#salvage-materials-btn"))==null||s.addEventListener("click",()=>{this.actions.salvageMaterials()}),e.querySelectorAll("[data-recipe]").forEach(t=>{t.addEventListener("click",a=>{var o;const i=(o=a.target.closest("[data-recipe]"))==null?void 0:o.getAttribute("data-recipe");i&&this.actions.startCraft(i)})})}updateDynamicElements(e,s){s.filter(a=>a.tier==="basic").forEach(a=>{const i=e.querySelector(`[data-recipe="${a.recipeId}"]`);if(i){const o=i.querySelector(".progress-bar"),n=i.querySelector(".craft-details"),c=i.querySelector(".progress-fill");o&&n&&(a.isCrafting?(o.classList.remove("hidden"),o.classList.add("visible"),n.classList.add("hidden")):(o.classList.remove("visible"),o.classList.add("hidden"),n.classList.remove("hidden"))),c&&(c.style.width=`${a.progress*100}%`),i.classList.toggle("available",a.canCraft&&!a.isCrafting),i.classList.toggle("disabled",!a.canCraft||a.isCrafting),i.disabled=!a.canCraft||a.isCrafting}})}}class x{constructor(e){this.actions=e}render(e){return e.length===0?"":`
      <div class="panel advanced-crafting-panel">
        <h3>🔧 Advanced Crafting</h3>
        <h4>Complex Components</h4>
        <div class="crafting-list">
          ${e.map(t=>{const a=t.craftTime>0?` (${t.craftTime/1e3}s)`:"",i=t.inputs.map(n=>`${n.amount} ${n.name}`).join(", "),o=t.outputs.map(n=>`${n.amount} ${n.name}`).join(", ");return`
        <div class="craft-item">
          <button 
            class="craft-btn ${t.canCraft&&!t.isCrafting?"available":"disabled"}" 
            data-recipe="${t.recipeId}"
            ${!t.canCraft||t.isCrafting?"disabled":""}
          >
            <div class="craft-content">
              <div class="craft-name">${t.name}${a}</div>
              <div class="craft-details ${t.isCrafting?"hidden":""}">
                <div class="craft-inputs">Needs: ${i}</div>
                <div class="craft-outputs">Makes: ${o}</div>
              </div>
              <div class="progress-bar-container">
                <div class="progress-bar ${t.isCrafting?"visible":"hidden"}">
                  <div class="progress-fill" style="width: ${t.progress*100}%"></div>
                </div>
              </div>
            </div>
          </button>
        </div>
      `}).join("")}
        </div>
      </div>
    `}attachEventListeners(e){e.querySelectorAll("[data-recipe]").forEach(s=>{s.addEventListener("click",t=>{var i;const a=(i=t.target.closest("[data-recipe]"))==null?void 0:i.getAttribute("data-recipe");a&&this.actions.startCraft(a)})})}updateDynamicElements(e,s){s.forEach(t=>{const a=e.querySelector(`[data-recipe="${t.recipeId}"]`);if(a){const i=a.querySelector(".progress-bar"),o=a.querySelector(".craft-details"),n=a.querySelector(".progress-fill");i&&o&&(t.isCrafting?(i.classList.remove("hidden"),i.classList.add("visible"),o.classList.add("hidden")):(i.classList.remove("visible"),i.classList.add("hidden"),o.classList.remove("hidden"))),n&&(n.style.width=`${t.progress*100}%`),a.classList.toggle("available",t.canCraft&&!t.isCrafting),a.classList.toggle("disabled",!t.canCraft||t.isCrafting),a.disabled=!t.canCraft||t.isCrafting}})}}class F{constructor(e){this.actions=e}render(e){return e.length===0?"":`
      <div class="panel assembly-systems-panel">
        <h3>🏭 Assembly Systems</h3>
        <h4>Major Sub-Assemblies</h4>
        <div class="crafting-list">
          ${e.map(t=>{const a=t.craftTime>0?` (${t.craftTime/1e3}s)`:"",i=t.inputs.map(n=>`${n.amount} ${n.name}`).join(", "),o=t.outputs.map(n=>`${n.amount} ${n.name}`).join(", ");return`
        <div class="craft-item">
          <button 
            class="craft-btn ${t.canCraft&&!t.isCrafting?"available":"disabled"}" 
            data-recipe="${t.recipeId}"
            ${!t.canCraft||t.isCrafting?"disabled":""}
          >
            <div class="craft-content">
              <div class="craft-name">${t.name}${a}</div>
              <div class="craft-details ${t.isCrafting?"hidden":""}">
                <div class="craft-inputs">Needs: ${i}</div>
                <div class="craft-outputs">Makes: ${o}</div>
              </div>
              <div class="progress-bar-container">
                <div class="progress-bar ${t.isCrafting?"visible":"hidden"}">
                  <div class="progress-fill" style="width: ${t.progress*100}%"></div>
                </div>
              </div>
            </div>
          </button>
        </div>
      `}).join("")}
        </div>
      </div>
    `}attachEventListeners(e){e.querySelectorAll("[data-recipe]").forEach(s=>{s.addEventListener("click",t=>{var i;const a=(i=t.target.closest("[data-recipe]"))==null?void 0:i.getAttribute("data-recipe");a&&this.actions.startCraft(a)})})}updateDynamicElements(e,s){s.forEach(t=>{const a=e.querySelector(`[data-recipe="${t.recipeId}"]`);if(a){const i=a.querySelector(".progress-bar"),o=a.querySelector(".craft-details"),n=a.querySelector(".progress-fill");i&&o&&(t.isCrafting?(i.classList.remove("hidden"),i.classList.add("visible"),o.classList.add("hidden")):(i.classList.remove("visible"),i.classList.add("hidden"),o.classList.remove("hidden"))),n&&(n.style.width=`${t.progress*100}%`),a.classList.toggle("available",t.canCraft&&!t.isCrafting),a.classList.toggle("disabled",!t.canCraft||t.isCrafting),a.disabled=!t.canCraft||t.isCrafting}})}}class q{constructor(e){this.actions=e}render(e){return e.length===0?"":`
      <div class="panel automobile-construction-panel">
        <h3>🚗 Automobile Construction</h3>
        <h4>Complete Vehicle Assembly</h4>
        <div class="crafting-list">
          ${e.map(t=>{const a=t.craftTime>0?` (${t.craftTime/1e3}s)`:"",i=t.inputs.map(n=>`${n.amount} ${n.name}`).join(", "),o=t.outputs.map(n=>`${n.amount} ${n.name}`).join(", ");return`
        <div class="craft-item">
          <button 
            class="craft-btn ${t.canCraft&&!t.isCrafting?"available":"disabled"}" 
            data-recipe="${t.recipeId}"
            ${!t.canCraft||t.isCrafting?"disabled":""}
          >
            <div class="craft-content">
              <div class="craft-name">${t.name}${a}</div>
              <div class="craft-details ${t.isCrafting?"hidden":""}">
                <div class="craft-inputs">Needs: ${i}</div>
                <div class="craft-outputs">Makes: ${o}</div>
              </div>
              <div class="progress-bar-container">
                <div class="progress-bar ${t.isCrafting?"visible":"hidden"}">
                  <div class="progress-fill" style="width: ${t.progress*100}%"></div>
                </div>
              </div>
            </div>
          </button>
        </div>
      `}).join("")}
        </div>
      </div>
    `}attachEventListeners(e){e.querySelectorAll("[data-recipe]").forEach(s=>{s.addEventListener("click",t=>{var i;const a=(i=t.target.closest("[data-recipe]"))==null?void 0:i.getAttribute("data-recipe");a&&this.actions.startCraft(a)})})}updateDynamicElements(e,s){s.forEach(t=>{const a=e.querySelector(`[data-recipe="${t.recipeId}"]`);if(a){const i=a.querySelector(".progress-bar"),o=a.querySelector(".craft-details"),n=a.querySelector(".progress-fill");i&&o&&(t.isCrafting?(i.classList.remove("hidden"),i.classList.add("visible"),o.classList.add("hidden")):(i.classList.remove("visible"),i.classList.add("hidden"),o.classList.remove("hidden"))),n&&(n.style.width=`${t.progress*100}%`),a.classList.toggle("available",t.canCraft&&!t.isCrafting),a.classList.toggle("disabled",!t.canCraft||t.isCrafting),a.disabled=!t.canCraft||t.isCrafting}})}}class N{constructor(e){this.actions=e}render(e,s){if(s.length===0&&e.length===0)return"";const t=s.map(i=>{const o=i.cost.map(n=>{const c=n.resourceId==="marks"?"€":"";return`${n.amount}${c} ${n.name}`}).join(", ");return`
        <div class="machine-build">
          <button 
            class="build-btn ${i.canBuild?"available":"disabled"}"
            data-machine="${i.id}"
            ${i.canBuild?"":"disabled"}
          >
            <div class="machine-name">Build ${i.name}</div>
            <div class="machine-cost">Cost: ${o}</div>
            <div class="machine-desc">${i.description}</div>
          </button>
        </div>
      `}).join(""),a=e.map(i=>{const o=i.upgradeCost.map(m=>{const u=m.resourceId==="marks"?"€":"";return`${m.amount}${u} ${m.name}`}).join(", "),n=i.status==="running"?"🟢":i.status==="waiting_resources"?"🟡":"🔴",c=i.status==="running"?"Running":i.status==="waiting_resources"?"Waiting for Resources":"Paused",l=i.isActive&&i.status==="running";return`
        <div class="machine-item ${i.isActive?"active":"inactive"} machine-${i.status}" data-machine-id="${i.id}">
          <div class="machine-header">
            <h4>${i.name} (Level ${i.level})</h4>
            <button 
              class="toggle-btn" 
              data-toggle="${i.id}"
            >
              ${i.isActive?"⏸️ Pause":"▶️ Start"}
            </button>
          </div>
          <div class="machine-info">
            <div>Speed: ${i.currentSpeed}s (Manual: ${i.manualSpeed}s) - ${i.efficiency}% efficiency</div>
            <div class="machine-status">
              <span class="status-indicator">${n} ${c}</span>
              ${i.statusMessage?`<div class="status-message">${i.statusMessage}</div>`:""}
            </div>
          </div>
          <div class="progress-bar" data-machine-progress-container="${i.id}" style="display: ${l?"block":"none"};">
            <div class="progress-fill" data-machine-progress="${i.id}" style="width: ${i.progress*100}%"></div>
          </div>
          <button 
            class="upgrade-btn ${i.canUpgrade?"available":"disabled"}"
            data-upgrade="${i.id}"
            ${i.canUpgrade?"":"disabled"}
          >
            Upgrade (${o})
          </button>
        </div>
      `}).join("");return`
      <div class="panel machines-panel">
        <h3>⚙️ Automation</h3>
        ${t}
        ${a}
      </div>
    `}attachEventListeners(e){e.querySelectorAll("[data-machine]").forEach(s=>{s.addEventListener("click",t=>{var i;const a=(i=t.target.closest("[data-machine]"))==null?void 0:i.getAttribute("data-machine");if(a&&this.actions.buildMachine(a)){const n=t.target;n.disabled=!0,n.classList.remove("available"),n.classList.add("disabled")}})}),e.querySelectorAll("[data-toggle]").forEach(s=>{s.addEventListener("click",t=>{const a=t.target.getAttribute("data-toggle");a&&this.actions.toggleMachine(a)})}),e.querySelectorAll("[data-upgrade]").forEach(s=>{s.addEventListener("click",t=>{const a=t.target.getAttribute("data-upgrade");a&&this.actions.upgradeMachine(a)})})}updateDynamicElements(e,s,t){s.forEach(a=>{const i=e.querySelector(`[data-machine-id="${a.id}"]`);if(i){i.className=`machine-item ${a.isActive?"active":"inactive"} machine-${a.status}`;const o=i.querySelector(".status-indicator");if(o){const h=a.status==="running"?"🟢":a.status==="waiting_resources"?"🟡":"🔴",b=a.status==="running"?"Running":a.status==="waiting_resources"?"Waiting for Resources":"Paused";o.textContent=`${h} ${b}`}const n=i.querySelector(".status-message");n&&(a.statusMessage?(n.textContent=a.statusMessage,n.style.display="block"):n.style.display="none");const c=i.querySelector("[data-toggle]");c&&(c.textContent=a.isActive?"⏹️ Stop":"▶️ Start");const l=a.isActive&&a.status==="running",m=i.querySelector(`[data-machine-progress-container="${a.id}"]`);m&&(m.style.display=l?"block":"none");const u=i.querySelector(`[data-machine-progress="${a.id}"]`);u&&(u.style.width=`${a.progress*100}%`)}}),t.forEach(a=>{const i=e.querySelector(`[data-machine="${a.id}"]`);i&&(i.classList.toggle("available",a.canBuild),i.classList.toggle("disabled",!a.canBuild),i.disabled=!a.canBuild)}),s.forEach(a=>{const i=e.querySelector(`[data-upgrade="${a.id}"]`);i&&(i.classList.toggle("available",a.canUpgrade),i.classList.toggle("disabled",!a.canUpgrade),i.disabled=!a.canUpgrade)})}}class U{constructor(e){this.actions=e}render(e,s){return s?`
      <div class="panel market-panel">
        <h3>💰 Resources & Market</h3>
        
        <div class="resources-section">
          <div class="resources-list">
            ${e.map(a=>`
        <div class="resource-item-with-market">
          <div class="resource-info">
            <span class="resource-name">${a.buyPrice||a.sellPrice?`€${a.buyPrice||a.sellPrice} `:""}${a.name}</span>
            <span class="resource-amount" data-resource-amount="${a.id}">${a.displayAmount}</span>
          </div>
          <div class="resource-actions">
            ${a.buyPrice?`
              <button 
                class="inline-market-btn buy-btn ${a.canBuy?"available":"disabled"}"
                data-buy="${a.id}"
                ${a.canBuy?"":"disabled"}
                title="Buy ${a.name}"
              >
                +
              </button>
            `:""}
            ${a.canSell?`
              <button 
                class="inline-market-btn sell-btn available"
                data-sell="${a.id}"
                title="Sell ${a.name}"
              >
                -
              </button>
            `:""}
          </div>
        </div>
      `).join("")}
          </div>
        </div>
      </div>
    `:""}attachEventListeners(e){e.querySelectorAll("[data-buy]").forEach(s=>{s.addEventListener("click",t=>{const a=t.target.getAttribute("data-buy");a&&this.actions.buyResource(a)})}),e.querySelectorAll("[data-sell]").forEach(s=>{s.addEventListener("click",t=>{const a=t.target.getAttribute("data-sell");a&&this.actions.sellResource(a)})})}updateDynamicElements(e,s){s.forEach(i=>{const o=e.querySelector(`[data-resource-amount="${i.id}"]`);o&&(o.textContent=i.displayAmount)}),e.querySelectorAll("[data-buy]").forEach(i=>{const o=i.getAttribute("data-buy");if(o){const n=s.find(c=>c.id===o);n&&(i.classList.toggle("available",n.canBuy),i.classList.toggle("disabled",!n.canBuy),i.disabled=!n.canBuy)}}),e.querySelectorAll("[data-sell]").forEach(i=>{const o=i.getAttribute("data-sell");if(o){const n=s.find(c=>c.id===o);n&&(i.classList.toggle("available",n.canSell),i.classList.toggle("disabled",!n.canSell),i.disabled=!n.canSell)}})}}class W{constructor(e){this.actions=e}render(e,s,t){if(!t)return"";const a=e.available.map(c=>`
        <div class="personnel-hire">
          <button 
            class="hire-btn ${c.canHire?"available":"disabled"}"
            data-hire="${c.id}"
            ${c.canHire?"":"disabled"}
          >
            <div class="personnel-name">Hire ${c.name}</div>
            <div class="personnel-cost">Cost: €${c.hiringCost} + €${c.monthlySalary}/10s</div>
            <div class="personnel-desc">${c.description}</div>
            <div class="personnel-total">Total: €${c.totalCost} (includes first payment)</div>
          </button>
        </div>
      `).join(""),i=e.active.map(c=>`
        <div class="personnel-item active">
          <div class="personnel-header">
            <h4>${c.name}</h4>
            <button 
              class="fire-btn" 
              data-fire="${c.id}"
            >
              🔥 Fire
            </button>
          </div>
          <div class="personnel-info">
            <div>Salary: €${c.monthlySalary}/10s</div>
            <div>Managing: ${c.managedRulesCount} rules</div>
            <div>Type: ${c.type}</div>
          </div>
        </div>
      `).join(""),o=s.map(c=>`
        <div class="rule-item ${c.isEnabled?"enabled":"disabled"}">
          <div class="rule-header">
            <span>${c.type.toUpperCase()} ${c.resourceName}</span>
            <button 
              class="toggle-rule-btn" 
              data-toggle-rule="${c.id}"
            >
              ${c.isEnabled?"⏸️":"▶️"}
            </button>
          </div>
          <div class="rule-info">
            <div>Threshold: ${c.threshold}</div>
            <div>Quantity: ${c.quantity}</div>
            <div>Manager: ${c.managerName}</div>
          </div>
          <button 
            class="delete-rule-btn" 
            data-delete-rule="${c.id}"
          >
            🗑️ Delete
          </button>
        </div>
      `).join(""),n=e.active.length>0?`
      <div class="quick-rules">
        <h4>Quick Rules</h4>
        <div class="quick-rule-buttons">
          <button class="quick-rule-btn" data-quick-rule="buy-materials">
            Auto-buy Materials (when < 5)
          </button>
          <button class="quick-rule-btn" data-quick-rule="sell-products">
            Auto-sell Products (when > 10)
          </button>
        </div>
      </div>
    `:"";return`
      <div class="panel stock-control-panel">
        <h3>📊 Stock Control</h3>
        
        ${e.totalMonthlyCost>0?`
          <div class="cost-summary">
            <strong>Operating Cost: €${e.totalMonthlyCost.toFixed(1)}/10s</strong>
            <div class="cost-warning" data-cost-warning>
              ✅ Sufficient funds
            </div>
          </div>
        `:""}
        
        ${a?`
          <div class="personnel-section">
            <h4>Available Personnel</h4>
            ${a}
          </div>
        `:""}
        
        ${i?`
          <div class="personnel-section">
            <h4>Active Personnel</h4>
            ${i}
          </div>
        `:""}
        
        ${n}
        
        ${o?`
          <div class="rules-section">
            <h4>Active Rules</h4>
            ${o}
          </div>
        `:""}
        
        ${e.active.length===0&&e.available.length===0?`
          <p>Complete more market transactions to unlock stock control personnel.</p>
        `:""}
      </div>
    `}attachEventListeners(e){e.querySelectorAll("[data-hire]").forEach(s=>{s.addEventListener("click",t=>{var i;const a=(i=t.target.closest("[data-hire]"))==null?void 0:i.getAttribute("data-hire");a&&this.actions.hirePersonnel(a)})}),e.querySelectorAll("[data-fire]").forEach(s=>{s.addEventListener("click",t=>{const a=t.target.getAttribute("data-fire");a&&confirm("Are you sure you want to fire this personnel?")&&this.actions.firePersonnel(a)})}),e.querySelectorAll("[data-toggle-rule]").forEach(s=>{s.addEventListener("click",t=>{const a=t.target.getAttribute("data-toggle-rule");a&&this.actions.toggleRule(a)})}),e.querySelectorAll("[data-delete-rule]").forEach(s=>{s.addEventListener("click",t=>{const a=t.target.getAttribute("data-delete-rule");a&&confirm("Are you sure you want to delete this rule?")&&this.actions.deleteRule(a)})}),e.querySelectorAll("[data-quick-rule]").forEach(s=>{s.addEventListener("click",t=>{const a=t.target.getAttribute("data-quick-rule");a&&this.actions.createQuickRules(a)})})}updateDynamicElements(e,s,t){s.available.forEach(a=>{const i=e.querySelector(`[data-hire="${a.id}"]`);i&&(i.classList.toggle("available",a.canHire),i.classList.toggle("disabled",!a.canHire),i.disabled=!a.canHire)}),e.querySelector("[data-cost-warning]")}}class j{constructor(e,s,t,a,i,o,n){d(this,"gameState");d(this,"container");d(this,"lastRenderState","");d(this,"isInitialized",!1);d(this,"eventEmitter");d(this,"uiDataProvider");d(this,"craftingPanel");d(this,"advancedCraftingPanel");d(this,"assemblySystemsPanel");d(this,"automobileConstructionPanel");d(this,"machinesPanel");d(this,"marketPanel");d(this,"stockControlPanel");d(this,"updateScheduled",!1);this.gameState=e,this.container=n,this.eventEmitter=e.getEventEmitter(),this.uiDataProvider=new D(e,s,t,a,o),this.craftingPanel=new B(this.createCraftingActions(s,i)),this.advancedCraftingPanel=new x(this.createCraftingActions(s,i)),this.assemblySystemsPanel=new F(this.createCraftingActions(s,i)),this.automobileConstructionPanel=new q(this.createCraftingActions(s,i)),this.machinesPanel=new N(this.createMachineActions(t)),this.marketPanel=new U(this.createMarketActions(a)),this.stockControlPanel=new W(this.createStockControlActions(o)),this.setupEventListeners()}createCraftingActions(e,s){return{startCraft:t=>e.startCraft(t),salvageMaterials:()=>s.salvageMaterials()}}createMachineActions(e){return{buildMachine:s=>e.buildMachine(s),toggleMachine:s=>e.toggleMachine(s),upgradeMachine:s=>e.upgradeMachine(s)}}createMarketActions(e){return{buyResource:s=>e.buy(s),sellResource:s=>e.sell(s)}}createStockControlActions(e){return{hirePersonnel:s=>e.hirePersonnel(s),firePersonnel:s=>e.firePersonnel(s),toggleRule:s=>{const a=this.gameState.getState().stockControl.rules[s];a&&e.updateRule(s,{...a,isEnabled:!a.isEnabled})},deleteRule:s=>e.deleteRule(s),createQuickRules:s=>this.createQuickRules(e,s)}}createQuickRules(e,s){const t=this.uiDataProvider.getPersonnelData();if(s==="buy-materials"){const a=t.active.find(i=>i.type==="procurement");a&&["wireStock","sheetMetal","leatherScraps","oil"].forEach(o=>{e.createRule(o,"buy",5,5,a.id)})}else if(s==="sell-products"){const a=t.active.find(i=>i.type==="sales");a&&["wireSprings","metalBrackets","leatherGaskets","springAssemblies","repairKits"].forEach(o=>{e.createRule(o,"sell",10,5,a.id)})}}setupEventListeners(){this.eventEmitter.on("resourceAmountChanged",()=>this.scheduleUpdate()),this.eventEmitter.on("resourceDiscovered",()=>this.forceFullRender()),this.eventEmitter.on("marketVisibilityChanged",()=>this.forceFullRender()),this.eventEmitter.on("stockControlVisibilityChanged",()=>this.forceFullRender()),this.eventEmitter.on("machineBuilt",()=>this.forceFullRender()),this.eventEmitter.on("machineStatusChanged",()=>this.scheduleUpdate()),this.eventEmitter.on("machineToggled",()=>this.scheduleUpdate()),this.eventEmitter.on("personnelHired",()=>this.forceFullRender()),this.eventEmitter.on("personnelFired",()=>this.forceFullRender()),this.eventEmitter.on("ruleCreated",()=>this.forceFullRender()),this.eventEmitter.on("ruleToggled",()=>this.scheduleUpdate()),this.eventEmitter.on("ruleDeleted",()=>this.forceFullRender()),this.eventEmitter.on("milestoneCompleted",()=>this.forceFullRender())}scheduleUpdate(){this.updateScheduled||(this.updateScheduled=!0,requestAnimationFrame(()=>{this.updateScheduled=!1,this.updateDynamicElements()}))}forceFullRender(){this.lastRenderState="",this.isInitialized=!1,this.render()}render(){const e=this.uiDataProvider.getUIStateData(),s=this.createStateHash(e);s!==this.lastRenderState||!this.isInitialized?(this.fullRender(),this.lastRenderState=s,this.isInitialized=!0):this.updateDynamicElements()}createStateHash(e){const s={showMarket:e.showMarket,showStockControl:e.showStockControl,showAdvancedCrafting:e.showAdvancedCrafting,showAssemblySystems:e.showAssemblySystems,showAutomobileConstruction:e.showAutomobileConstruction,resourceCount:this.uiDataProvider.getResourcesData().length,machineCount:this.uiDataProvider.getMachinesData().length,availableMachineCount:this.uiDataProvider.getAvailableMachinesData().length,personnelCount:this.uiDataProvider.getPersonnelData().active.length+this.uiDataProvider.getPersonnelData().available.length,rulesCount:this.uiDataProvider.getRulesData().length};return JSON.stringify(s)}fullRender(){const e=this.uiDataProvider.getUIStateData(),s=this.uiDataProvider.getCraftingDataByTier();this.container.innerHTML=`
      <div class="game-container">
        <header class="game-header">
          <h1>🏭 Autobahn - Industrial Incremental</h1>
          <div class="game-stats">
            <span id="marks-display">€${e.marksAmount} Marks</span>
            <button id="save-btn" class="save-btn">💾 Save</button>
            <button id="reset-btn" class="reset-btn">🔄 Reset</button>
          </div>
        </header>

        <div class="game-content">
          <div class="left-panel">
            ${this.craftingPanel.render(s.basic)}
            ${e.showAdvancedCrafting?this.advancedCraftingPanel.render(s.advanced):""}
            ${e.showAssemblySystems?this.assemblySystemsPanel.render(s.assembly):""}
            ${e.showAutomobileConstruction?this.automobileConstructionPanel.render(s.automobile):""}
            ${this.stockControlPanel.render(this.uiDataProvider.getPersonnelData(),this.uiDataProvider.getRulesData(),e.showStockControl)}
          </div>
          
          <div class="center-panel">
            ${this.machinesPanel.render(this.uiDataProvider.getMachinesData(),this.uiDataProvider.getAvailableMachinesData())}
          </div>
          
          <div class="right-panel">
            ${this.marketPanel.render(this.uiDataProvider.getResourcesData(),e.showMarket)}
          </div>
        </div>
      </div>
    `,this.attachEventListeners()}updateDynamicElements(){const e=this.uiDataProvider.getUIStateData(),s=this.uiDataProvider.getCraftingDataByTier(),t=this.container.querySelector("#marks-display");t&&(t.textContent=`€${e.marksAmount} Marks`);const a=this.container.querySelector(".left-panel"),i=this.container.querySelector(".center-panel"),o=this.container.querySelector(".right-panel");a&&(this.craftingPanel.updateDynamicElements(a,s.basic),e.showAdvancedCrafting&&this.advancedCraftingPanel.updateDynamicElements(a,s.advanced),e.showAssemblySystems&&this.assemblySystemsPanel.updateDynamicElements(a,s.assembly),e.showAutomobileConstruction&&this.automobileConstructionPanel.updateDynamicElements(a,s.automobile),this.stockControlPanel.updateDynamicElements(a,this.uiDataProvider.getPersonnelData(),this.uiDataProvider.getRulesData())),i&&this.machinesPanel.updateDynamicElements(i,this.uiDataProvider.getMachinesData(),this.uiDataProvider.getAvailableMachinesData()),o&&this.marketPanel.updateDynamicElements(o,this.uiDataProvider.getResourcesData())}attachEventListeners(){var i,o;const e=this.container.querySelector(".left-panel"),s=this.container.querySelector(".center-panel"),t=this.container.querySelector(".right-panel"),a=this.uiDataProvider.getUIStateData();e&&(this.craftingPanel.attachEventListeners(e),a.showAdvancedCrafting&&this.advancedCraftingPanel.attachEventListeners(e),a.showAssemblySystems&&this.assemblySystemsPanel.attachEventListeners(e),a.showAutomobileConstruction&&this.automobileConstructionPanel.attachEventListeners(e),this.stockControlPanel.attachEventListeners(e)),s&&this.machinesPanel.attachEventListeners(s),t&&this.marketPanel.attachEventListeners(t),(i=this.container.querySelector("#save-btn"))==null||i.addEventListener("click",()=>{this.gameState.saveGame(),this.gameState.addNotification("Game saved!","success",2e3)}),(o=this.container.querySelector("#reset-btn"))==null||o.addEventListener("click",()=>{confirm("Are you sure you want to reset your progress?")&&(this.gameState.resetGame(),this.forceFullRender())})}}const f=class f{constructor(){d(this,"isEnabled",!1);d(this,"debugPanel",null);d(this,"gameState");d(this,"craftingSystem");d(this,"automationManager");d(this,"marketSystem");(new URLSearchParams(window.location.search).get("dev")==="true"||localStorage.getItem("autobahn-dev-mode")==="true")&&this.enable()}static getInstance(){return f.instance||(f.instance=new f),f.instance}initialize(e,s,t,a){this.gameState=e,this.craftingSystem=s,this.automationManager=t,this.marketSystem=a,this.isEnabled&&(this.createDebugPanel(),this.setupKeyboardShortcuts(),this.logSystemInfo())}enable(){this.isEnabled=!0,localStorage.setItem("autobahn-dev-mode","true"),console.log("🔧 Dev Mode Enabled"),this.gameState&&(this.createDebugPanel(),this.setupKeyboardShortcuts(),this.logSystemInfo())}disable(){this.isEnabled=!1,localStorage.removeItem("autobahn-dev-mode"),this.debugPanel&&(this.debugPanel.remove(),this.debugPanel=null),console.log("🔧 Dev Mode Disabled")}isDevMode(){return this.isEnabled}createDebugPanel(){if(this.debugPanel)return;this.debugPanel=document.createElement("div"),this.debugPanel.id="dev-panel",this.debugPanel.innerHTML=`
      <div class="dev-panel-header">
        <h3>🔧 Dev Tools</h3>
        <button id="dev-panel-toggle">−</button>
      </div>
      <div class="dev-panel-content">
        <div class="dev-section">
          <h4>Quick Actions</h4>
          <button id="dev-add-resources">Add Resources</button>
          <button id="dev-add-money">Add 100 Marks</button>
          <button id="dev-unlock-all">Unlock All</button>
          <button id="dev-reset-ui">Reset UI State</button>
        </div>
        
        <div class="dev-section">
          <h4>Game State</h4>
          <button id="dev-log-state">Log State</button>
          <button id="dev-export-save">Export Save</button>
          <button id="dev-import-save">Import Save</button>
          <input type="file" id="dev-save-file" accept=".json" style="display: none;">
        </div>
        
        <div class="dev-section">
          <h4>Performance</h4>
          <div id="dev-performance">
            <div>FPS: <span id="dev-fps">--</span></div>
            <div>Update Time: <span id="dev-update-time">--</span>ms</div>
            <div>Render Time: <span id="dev-render-time">--</span>ms</div>
          </div>
        </div>
        
        <div class="dev-section">
          <h4>Debug Log</h4>
          <div id="dev-log" class="dev-log"></div>
          <button id="dev-clear-log">Clear Log</button>
        </div>
      </div>
    `;const e=document.createElement("style");e.textContent=`
      #dev-panel {
        position: fixed;
        top: 10px;
        left: 10px;
        width: 300px;
        background: rgba(0, 0, 0, 0.9);
        border: 2px solid #00ff00;
        border-radius: 8px;
        color: #00ff00;
        font-family: 'Courier New', monospace;
        font-size: 12px;
        z-index: 10000;
        max-height: 80vh;
        overflow-y: auto;
      }
      
      .dev-panel-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px;
        background: rgba(0, 255, 0, 0.1);
        border-bottom: 1px solid #00ff00;
      }
      
      .dev-panel-header h3 {
        margin: 0;
        font-size: 14px;
      }
      
      #dev-panel-toggle {
        background: none;
        border: 1px solid #00ff00;
        color: #00ff00;
        cursor: pointer;
        padding: 2px 8px;
        border-radius: 3px;
      }
      
      .dev-panel-content {
        padding: 10px;
      }
      
      .dev-section {
        margin-bottom: 15px;
        padding-bottom: 10px;
        border-bottom: 1px solid #004400;
      }
      
      .dev-section h4 {
        margin: 0 0 8px 0;
        color: #88ff88;
        font-size: 12px;
      }
      
      .dev-section button {
        background: rgba(0, 255, 0, 0.1);
        border: 1px solid #00ff00;
        color: #00ff00;
        padding: 4px 8px;
        margin: 2px;
        cursor: pointer;
        border-radius: 3px;
        font-size: 11px;
      }
      
      .dev-section button:hover {
        background: rgba(0, 255, 0, 0.2);
      }
      
      .dev-log {
        background: rgba(0, 0, 0, 0.5);
        border: 1px solid #004400;
        padding: 8px;
        height: 100px;
        overflow-y: auto;
        font-size: 10px;
        margin-bottom: 5px;
      }
      
      #dev-performance div {
        margin: 2px 0;
      }
      
      .dev-panel-content.collapsed {
        display: none;
      }
    `,document.head.appendChild(e),document.body.appendChild(this.debugPanel),this.attachDebugEventListeners(),this.startPerformanceMonitoring()}attachDebugEventListeners(){var e,s,t,a,i,o,n,c,l,m;this.debugPanel&&((e=this.debugPanel.querySelector("#dev-panel-toggle"))==null||e.addEventListener("click",()=>{var b,S;const u=(b=this.debugPanel)==null?void 0:b.querySelector(".dev-panel-content"),h=(S=this.debugPanel)==null?void 0:S.querySelector("#dev-panel-toggle");u&&h&&(u.classList.toggle("collapsed"),h.textContent=u.classList.contains("collapsed")?"+":"−")}),(s=this.debugPanel.querySelector("#dev-add-resources"))==null||s.addEventListener("click",()=>{this.addTestResources()}),(t=this.debugPanel.querySelector("#dev-add-money"))==null||t.addEventListener("click",()=>{this.gameState.updateResource("marks",100),this.log("Added 100 marks")}),(a=this.debugPanel.querySelector("#dev-unlock-all"))==null||a.addEventListener("click",()=>{this.unlockAll()}),(i=this.debugPanel.querySelector("#dev-reset-ui"))==null||i.addEventListener("click",()=>{this.resetUIState()}),(o=this.debugPanel.querySelector("#dev-log-state"))==null||o.addEventListener("click",()=>{console.log("Game State:",this.gameState.getState()),this.log("Game state logged to console")}),(n=this.debugPanel.querySelector("#dev-export-save"))==null||n.addEventListener("click",()=>{this.exportSave()}),(c=this.debugPanel.querySelector("#dev-import-save"))==null||c.addEventListener("click",()=>{var u,h;(h=(u=this.debugPanel)==null?void 0:u.querySelector("#dev-save-file"))==null||h.click()}),(l=this.debugPanel.querySelector("#dev-save-file"))==null||l.addEventListener("change",u=>{this.importSave(u)}),(m=this.debugPanel.querySelector("#dev-clear-log"))==null||m.addEventListener("click",()=>{var h;const u=(h=this.debugPanel)==null?void 0:h.querySelector("#dev-log");u&&(u.innerHTML="")}))}setupKeyboardShortcuts(){document.addEventListener("keydown",e=>{this.isEnabled&&(e.ctrlKey&&e.shiftKey&&e.key==="D"&&(e.preventDefault(),this.debugPanel&&(this.debugPanel.style.display=this.debugPanel.style.display==="none"?"block":"none")),e.ctrlKey&&e.shiftKey&&e.key==="R"&&(e.preventDefault(),this.addTestResources()),e.ctrlKey&&e.shiftKey&&e.key==="M"&&(e.preventDefault(),this.gameState.updateResource("marks",100),this.log("Added 100 marks (hotkey)")))})}addTestResources(){["wireStock","sheetMetal","leatherScraps","oil"].forEach(s=>{this.gameState.updateResource(s,10)}),this.log("Added 10 of each basic resource")}unlockAll(){const e=this.gameState.getState();Object.keys(p).forEach(s=>{e.unlockedRecipes.add(s)}),Object.keys(v).forEach(s=>{e.unlockedMachines.add(s)}),e.uiState.showMarket=!0,e.uiState.showFullMarket=!0,this.log("Unlocked all recipes, machines, and UI elements")}resetUIState(){const e=this.gameState.getState();e.uiState={discoveredResources:new Set(["marks"]),showMarket:!1,showFullMarket:!1,showEmergencyLabor:!1},this.log("Reset UI state to initial values")}exportSave(){this.gameState.saveGame();const e=localStorage.getItem("autobahn-save");if(e){const s=new Blob([e],{type:"application/json"}),t=URL.createObjectURL(s),a=document.createElement("a");a.href=t,a.download=`autobahn-save-${new Date().toISOString().slice(0,19)}.json`,a.click(),URL.revokeObjectURL(t),this.log("Save exported")}}importSave(e){var a;const s=(a=e.target.files)==null?void 0:a[0];if(!s)return;const t=new FileReader;t.onload=i=>{var o;try{const n=(o=i.target)==null?void 0:o.result;localStorage.setItem("autobahn-save",n),location.reload()}catch(n){this.log(`Import failed: ${n}`)}},t.readAsText(s)}startPerformanceMonitoring(){let e=performance.now(),s=0,t=e;const a=()=>{var o;const i=performance.now();if(s++,i-t>=1e3){const n=Math.round(s*1e3/(i-t)),c=(o=this.debugPanel)==null?void 0:o.querySelector("#dev-fps");c&&(c.textContent=n.toString()),s=0,t=i}e=i,this.isEnabled&&requestAnimationFrame(a)};requestAnimationFrame(a)}log(e){var i;if(!this.isEnabled)return;const t=`[${new Date().toLocaleTimeString()}] ${e}`;console.log(`🔧 ${t}`);const a=(i=this.debugPanel)==null?void 0:i.querySelector("#dev-log");if(a){const o=document.createElement("div");o.textContent=t,a.appendChild(o),a.scrollTop=a.scrollHeight}}logSystemInfo(){console.group("🔧 Autobahn Dev Mode - System Info"),console.log("User Agent:",navigator.userAgent),console.log("Screen Resolution:",`${screen.width}x${screen.height}`),console.log("Viewport:",`${window.innerWidth}x${window.innerHeight}`),console.log("Local Storage Available:",typeof Storage<"u"),console.log("Performance API Available:",typeof performance<"u"),console.groupEnd()}getGameState(){var e;return(e=this.gameState)==null?void 0:e.getState()}setResource(e,s){this.gameState&&(this.gameState.getState().resources[e].amount=s,this.log(`Set ${e} to ${s}`))}triggerMilestone(e){this.gameState&&(this.gameState.checkMilestones(),this.log("Triggered milestone check"))}};d(f,"instance");let y=f;window.devMode=y.getInstance();class G{constructor(e){d(this,"gameState");d(this,"craftingSystem");d(this,"automationManager");d(this,"marketSystem");d(this,"salvageSystem");d(this,"stockControlSystem");d(this,"uiRenderer");d(this,"gameLoop",0);d(this,"devMode");this.devMode=y.getInstance(),this.gameState=new E,this.craftingSystem=new R(this.gameState),this.automationManager=new $(this.gameState,this.craftingSystem),this.marketSystem=new M(this.gameState),this.salvageSystem=new T(this.gameState),this.stockControlSystem=new L(this.gameState,this.marketSystem),this.uiRenderer=new j(this.gameState,this.craftingSystem,this.automationManager,this.marketSystem,this.salvageSystem,this.stockControlSystem,e),this.devMode.initialize(this.gameState,this.craftingSystem,this.automationManager,this.marketSystem),this.start()}forceUIRefresh(){this.uiRenderer.forceFullRender()}start(){this.devMode.log("Game starting..."),this.uiRenderer.render(),this.gameLoop=setInterval(()=>{this.update()},16),setInterval(()=>{this.gameState.saveGame()},3e4)}update(){const e=performance.now();this.automationManager.updateMachines(),this.stockControlSystem.update();const s=performance.now()-e,t=performance.now();this.uiRenderer.render();const a=performance.now()-t;if(this.devMode.isDevMode()){const i=document.querySelector("#dev-update-time"),o=document.querySelector("#dev-render-time");i&&(i.textContent=s.toFixed(2)),o&&(o.textContent=a.toFixed(2))}}destroy(){this.devMode.log("Game shutting down..."),this.gameState.getNotificationManager().destroy(),this.gameLoop&&clearInterval(this.gameLoop)}}const H=document.querySelector("#app"),O=new G(H);window.addEventListener("beforeunload",()=>{O.destroy()});
